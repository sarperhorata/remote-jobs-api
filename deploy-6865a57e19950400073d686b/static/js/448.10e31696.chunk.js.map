{"version":3,"file":"static/js/448.10e31696.chunk.js","mappings":"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","sources":["pages/Register.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\n\nconst Register: React.FC = () => {\n  const navigate = useNavigate();\n  const { signup } = useAuth();\n  const [fullName, setFullName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Form validation\n    if (password !== confirmPassword) {\n      return setError('Passwords do not match');\n    }\n    \n    setError('');\n    setIsLoading(true);\n    \n    try {\n      await signup(fullName, email, password);\n      // Redirect to the page they tried to visit or to dashboard\n      navigate('/login', { replace: true });\n    } catch (err) {\n      setError('Failed to create an account');\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-gray-50\">\n      <div className=\"m-auto w-full max-w-md p-8 space-y-8 bg-white rounded-lg shadow-md\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Create your account\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Or{' '}\n            <Link to=\"/auth/login\" className=\"font-medium text-primary hover:text-primary-dark\">\n              sign in to your account\n            </Link>\n          </p>\n        </div>\n        \n        {error && (\n          <div className=\"p-4 mb-4 text-sm text-red-700 bg-red-100 rounded-lg\" role=\"alert\">\n            {error}\n          </div>\n        )}\n        \n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"name\" className=\"sr-only\">Full name</label>\n              <input\n                id=\"name\"\n                name=\"name\"\n                type=\"text\"\n                required\n                value={fullName}\n                onChange={(e) => setFullName(e.target.value)}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Full name\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"email\" className=\"sr-only\">Email address</label>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Email address\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">Password</label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div>\n              <label htmlFor=\"confirm-password\" className=\"sr-only\">Confirm password</label>\n              <input\n                id=\"confirm-password\"\n                name=\"confirm-password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                required\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary focus:border-primary focus:z-10 sm:text-sm\"\n                placeholder=\"Confirm password\"\n              />\n            </div>\n          </div>\n\n          <div>\n            <button\n              type=\"submit\"\n              disabled={isLoading}\n              className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary\"\n            >\n              {isLoading ? 'Creating account...' : 'Create account'}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register; "],"names":["Register","navigate","useNavigate","signup","useAuth","fullName","setFullName","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","isLoading","setIsLoading","error","setError","_jsx","className","children","_jsxs","Link","to","role","onSubmit","async","e","preventDefault","replace","err","console","htmlFor","id","name","type","required","value","onChange","target","placeholder","autoComplete","disabled"],"sourceRoot":""}