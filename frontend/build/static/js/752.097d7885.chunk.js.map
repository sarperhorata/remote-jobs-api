{"version":3,"file":"static/js/752.097d7885.chunk.js","mappings":"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","sources":["utils/apiConfig.ts","services/onboardingService.ts","pages/SetPassword.tsx"],"sourcesContent":["// Dinamik API URL detection sistemi\n// Backend i√ßin 8xxx portlarƒ± (8001, 8000, 8002, vb.) kontrol eder\n// Frontend i√ßin 5xxx portlarƒ± ile √ßalƒ±≈üabilir\n\ninterface PortConfig {\n  backendPorts: number[];\n  frontendPorts: number[];\n}\n\nconst portConfig: PortConfig = {\n  backendPorts: [8001, 8000, 8002, 8003, 8004], // 8001'i ilk sƒ±raya aldƒ±m - stable port\n  frontendPorts: [3001, 3000, 5000, 5001, 5173], // Frontend i√ßin √∂ncelik sƒ±rasƒ±\n};\n\n// API URL cache - Global deƒüi≈ükenler\nlet cachedApiUrl: string | null = null;\nlet apiUrlPromise: Promise<string> | null = null;\n\n// Sync API Base URL - fallback for components that need immediate access\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001';\n\n// Cache temizleme fonksiyonu\nexport const clearApiUrlCache = () => {\n  console.log('üßπ Clearing API URL cache');\n  cachedApiUrl = null;\n  apiUrlPromise = null;\n};\n\n// Backend port detection\nconst detectBackendPort = async (): Promise<string> => {\n  console.log('üîç Starting backend port detection...');\n  \n  // Environment variable varsa onu kullan\n  if (process.env.REACT_APP_API_URL) {\n    console.log('‚úÖ Using environment variable:', process.env.REACT_APP_API_URL);\n    return process.env.REACT_APP_API_URL;\n  }\n\n  // Test environment check - force port 8000 for tests\n  if (process.env.NODE_ENV === 'test') {\n    console.log('üß™ Test mode - forcing port 8000');\n    return 'http://localhost:8000';\n  }\n\n  // Backend portlarƒ±nƒ± sƒ±rayla test et\n  for (const port of portConfig.backendPorts) {\n    try {\n      console.log(`üîç Testing backend on port ${port}...`);\n      const response = await fetch(`http://localhost:${port}/health`, {\n        method: 'GET',\n        signal: AbortSignal.timeout(2000), // 2 saniye timeout\n      });\n      \n      if (response.ok) {\n        console.log(`‚úÖ Backend detected on port ${port}`);\n        return `http://localhost:${port}`;\n      }\n    } catch (error: any) {\n      // Port ula≈üƒ±labilir deƒüil, bir sonrakini dene\n      console.log(`‚ùå Backend not found on port ${port}:`, error.message);\n    }\n  }\n\n  // Hi√ßbir port √ßalƒ±≈ümƒ±yorsa varsayƒ±lan port\n  console.warn('‚ö†Ô∏è No backend found, using default port 8001');\n  return 'http://localhost:8001';\n};\n\nexport const getApiUrl = async (): Promise<string> => {\n  console.log('üì° getApiUrl called, cachedApiUrl:', cachedApiUrl);\n  \n  // Test ortamƒ±nda her zaman cache'i temizle\n  if (process.env.NODE_ENV === 'test') {\n    console.log('üß™ Test mode - clearing cache for fresh detection');\n    clearApiUrlCache();\n  }\n  \n  // Cache varsa onu kullan\n  if (cachedApiUrl) {\n    console.log('üìã Using cached API URL:', cachedApiUrl);\n    return cachedApiUrl;\n  }\n\n  // Zaten bir detection √ßalƒ±≈üƒ±yorsa aynƒ± promise'i bekle\n  if (apiUrlPromise) {\n    console.log('‚è≥ Detection already in progress, waiting...');\n    return apiUrlPromise;\n  }\n\n  // Yeni detection ba≈ülat\n  console.log('üöÄ Starting new detection...');\n  apiUrlPromise = detectBackendPort();\n  \n  try {\n    cachedApiUrl = await apiUrlPromise;\n    console.log('‚úÖ Detection complete, cached URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } catch (error) {\n    console.error('‚ùå Backend detection failed:', error);\n    cachedApiUrl = 'http://localhost:8001'; // Fallback\n    console.log('üîÑ Using fallback URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } finally {\n    apiUrlPromise = null; // Promise'i temizle\n  }\n};\n\n// Development/Production mode detection\nexport const isDevelopment = process.env.NODE_ENV === 'development';\nexport const isProduction = process.env.NODE_ENV === 'production';\nexport const isTest = process.env.NODE_ENV === 'test';\n\n// Current frontend port detection\nexport const getCurrentPort = (): number => {\n  if (typeof window === 'undefined') return 3000; // SSR or test environment\n  const port = parseInt(window.location.port);\n  return port || (window.location.protocol === 'https:' ? 443 : 80);\n};\n\n// Backend health check\nexport const checkBackendHealth = async (apiUrl?: string): Promise<boolean> => {\n  try {\n    const url = apiUrl || await getApiUrl();\n    const healthUrl = url.replace('/api', '/health');\n    \n    const response = await fetch(healthUrl, {\n      method: 'GET',\n      signal: AbortSignal.timeout(5000),\n    });\n    \n    return response.ok;\n  } catch (error) {\n    console.error('Backend health check failed:', error);\n    return false;\n  }\n};\n\n// Force cache temizleme - sadece gerekli durumlarda\nif (typeof window !== 'undefined' && process.env.NODE_ENV !== 'test') {\n  console.log('üîÑ Initial page load - clearing API URL cache');\n  clearApiUrlCache();\n}\n\n// Test ortamƒ±nda export edilen konfig√ºrasyon objesi\nconst apiConfig = {\n  getApiUrl,\n  clearApiUrlCache,\n  checkBackendHealth,\n  getCurrentPort,\n  isDevelopment,\n  isProduction,\n  isTest,\n};\n\nexport default apiConfig; ","import { getApiUrl } from '../utils/apiConfig';\n\nexport interface OnboardingStep {\n  message: string;\n  user_id?: string;\n  onboarding_step: number;\n  next_step: string;\n  access_token?: string;\n}\n\nexport interface EmailOnlyRegister {\n  email: string;\n}\n\nexport interface EmailVerification {\n  token: string;\n}\n\nexport interface SetPassword {\n  token: string;\n  password: string;\n  confirm_password: string;\n}\n\nexport interface ProfileCompletion {\n  name?: string;\n  bio?: string;\n  location?: string;\n  skills?: string[];\n  experience_years?: number;\n  job_preferences?: Record<string, any>;\n}\n\nexport interface OnboardingStatus {\n  user_id: string;\n  onboarding_step: number;\n  next_step: string;\n  email_verified: boolean;\n  onboarding_completed: boolean;\n  has_linkedin: boolean;\n  has_resume: boolean;\n}\n\nclass OnboardingService {\n  private async getApiUrl(): Promise<string> {\n    return await getApiUrl();\n  }\n\n  async registerWithEmail(email: string): Promise<OnboardingStep> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/register-email`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ email }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Email kayƒ±t i≈ülemi ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async verifyEmail(token: string): Promise<OnboardingStep> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/verify-email`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ token }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Email doƒürulama ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async setPassword(token: string, password: string, confirmPassword: string): Promise<OnboardingStep> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/set-password`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ \n        token, \n        password, \n        confirm_password: confirmPassword \n      }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || '≈ûifre belirleme ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async getLinkedInAuthUrl(): Promise<{ auth_url: string; state: string }> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/linkedin-auth-url`);\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'LinkedIn auth URL alƒ±namadƒ±');\n    }\n\n    return response.json();\n  }\n\n  async handleLinkedInCallback(code: string, state: string, userId: string): Promise<OnboardingStep> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/linkedin-callback`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ code, state, user_id: userId }),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'LinkedIn baƒülantƒ±sƒ± ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async uploadCV(userId: string, file: File): Promise<{ message: string; file_url: string }> {\n    const apiUrl = await this.getApiUrl();\n    const formData = new FormData();\n    formData.append('file', file);\n    formData.append('user_id', userId);\n\n    const response = await fetch(`${apiUrl}/onboarding/upload-cv`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'CV y√ºkleme ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async completeProfile(userId: string, profileData: ProfileCompletion): Promise<OnboardingStep> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/complete-profile?user_id=${userId}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(profileData),\n    });\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Profil tamamlama ba≈üarƒ±sƒ±z');\n    }\n\n    return response.json();\n  }\n\n  async getOnboardingStatus(userId: string): Promise<OnboardingStatus> {\n    const apiUrl = await this.getApiUrl();\n    const response = await fetch(`${apiUrl}/onboarding/status/${userId}`);\n\n    if (!response.ok) {\n      const errorData = await response.json();\n      throw new Error(errorData.detail || 'Onboarding durumu alƒ±namadƒ±');\n    }\n\n    return response.json();\n  }\n\n  // URL'den token parametresini al\n  getTokenFromUrl(): string | null {\n    const urlParams = new URLSearchParams(window.location.search);\n    return urlParams.get('token');\n  }\n\n  // URL'den LinkedIn callback parametrelerini al\n  getLinkedInCallbackParams(): { code: string | null; state: string | null } {\n    const urlParams = new URLSearchParams(window.location.search);\n    return {\n      code: urlParams.get('code'),\n      state: urlParams.get('state'),\n    };\n  }\n}\n\nexport const onboardingService = new OnboardingService(); ","import React, { useState, useEffect } from 'react';\nimport { useNavigate, useSearchParams } from 'react-router-dom';\nimport { Eye, EyeOff, Lock, CheckCircle, AlertCircle } from '../components/icons/EmojiIcons';\nimport { onboardingService } from '../services/onboardingService';\n\nconst SetPassword: React.FC = () => {\n  const navigate = useNavigate();\n  const [searchParams] = useSearchParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  // Password strength indicators\n  const [passwordChecks, setPasswordChecks] = useState({\n    length: false,\n    uppercase: false,\n    lowercase: false,\n    number: false,\n    special: false,\n  });\n\n  useEffect(() => {\n    const token = searchParams.get('token');\n    if (!token) {\n      setError('Ge√ßersiz veya eksik token');\n    }\n  }, [searchParams]);\n\n  useEffect(() => {\n    // Check password requirements\n    setPasswordChecks({\n      length: password.length >= 8,\n      uppercase: /[A-Z]/.test(password),\n      lowercase: /[a-z]/.test(password),\n      number: /\\d/.test(password),\n      special: /[!@#$%^&*(),.?\":{}|<>]/.test(password),\n    });\n  }, [password]);\n\n  const isPasswordValid = Object.values(passwordChecks).every(check => check);\n  const doPasswordsMatch = password === confirmPassword && password.length > 0;\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const token = searchParams.get('token');\n    \n    if (!token) {\n      setError('Token bulunamadƒ±');\n      return;\n    }\n\n    if (!isPasswordValid) {\n      setError('≈ûifre g√ºvenlik kriterlerini saƒülamƒ±yor');\n      return;\n    }\n\n    if (!doPasswordsMatch) {\n      setError('≈ûifreler e≈üle≈ümiyor');\n      return;\n    }\n\n    setLoading(true);\n    setError('');\n\n    try {\n      const result = await onboardingService.setPassword(token, password, confirmPassword);\n      \n      // ≈ûifre ba≈üarƒ±yla belirlendi, profil kurulum sayfasƒ±na y√∂nlendir\n      navigate('/onboarding/profile-setup', { \n        state: { \n          userId: result.user_id,\n          message: result.message \n        }\n      });\n      \n    } catch (error) {\n      setError(error instanceof Error ? error.message : '≈ûifre belirleme ba≈üarƒ±sƒ±z');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8\">\n          <div className=\"text-center mb-8\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Lock className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n              ≈ûifre Belirleyin\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              G√ºvenli bir ≈üifre olu≈üturarak hesabƒ±nƒ±zƒ± koruyun\n            </p>\n          </div>\n\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {error && (\n              <div className=\"p-3 text-sm text-red-700 bg-red-100 border border-red-200 rounded-lg\">\n                {error}\n              </div>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                ≈ûifre\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showPassword ? 'text' : 'password'}\n                  required\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                  placeholder=\"G√ºvenli ≈üifrenizi girin\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowPassword(!showPassword)}\n                  className=\"absolute right-3 top-3.5 text-gray-400 hover:text-gray-600\"\n                >\n                  {showPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n            </div>\n\n            {password && (\n              <div className=\"space-y-2\">\n                <p className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                  ≈ûifre Gereksinimleri:\n                </p>\n                <div className=\"space-y-1\">\n                  {[\n                    { key: 'length', text: 'En az 8 karakter' },\n                    { key: 'uppercase', text: 'En az 1 b√ºy√ºk harf (A-Z)' },\n                    { key: 'lowercase', text: 'En az 1 k√º√ß√ºk harf (a-z)' },\n                    { key: 'number', text: 'En az 1 rakam (0-9)' },\n                    { key: 'special', text: 'En az 1 √∂zel karakter (!@#$...)' },\n                  ].map(({ key, text }) => (\n                    <div key={key} className=\"flex items-center space-x-2\">\n                      {passwordChecks[key as keyof typeof passwordChecks] ? (\n                        <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      ) : (\n                        <div className=\"w-4 h-4 border border-gray-300 rounded-full\" />\n                      )}\n                      <span className={`text-sm ${\n                        passwordChecks[key as keyof typeof passwordChecks] \n                          ? 'text-green-600 dark:text-green-400' \n                          : 'text-gray-500 dark:text-gray-400'\n                      }`}>\n                        {text}\n                      </span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                ≈ûifre Tekrarƒ±\n              </label>\n              <div className=\"relative\">\n                <input\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  required\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  className=\"w-full px-4 py-3 pr-12 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                  placeholder=\"≈ûifrenizi tekrar girin\"\n                />\n                <button\n                  type=\"button\"\n                  onClick={() => setShowConfirmPassword(!showConfirmPassword)}\n                  className=\"absolute right-3 top-3.5 text-gray-400 hover:text-gray-600\"\n                >\n                  {showConfirmPassword ? <EyeOff className=\"w-5 h-5\" /> : <Eye className=\"w-5 h-5\" />}\n                </button>\n              </div>\n              {confirmPassword && (\n                <div className=\"mt-2 flex items-center space-x-2\">\n                  {doPasswordsMatch ? (\n                    <>\n                      <CheckCircle className=\"w-4 h-4 text-green-500\" />\n                      <span className=\"text-sm text-green-600 dark:text-green-400\">\n                        ≈ûifreler e≈üle≈üiyor\n                      </span>\n                    </>\n                  ) : (\n                    <>\n                      <AlertCircle className=\"w-4 h-4 text-red-500\" />\n                      <span className=\"text-sm text-red-600 dark:text-red-400\">\n                        ≈ûifreler e≈üle≈ümiyor\n                      </span>\n                    </>\n                  )}\n                </div>\n              )}\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading || !isPasswordValid || !doPasswordsMatch}\n              className=\"w-full bg-gradient-to-r from-orange-500 to-yellow-500 text-white py-3 px-4 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? '≈ûifre Belirleniyor...' : '≈ûifremi Belirle ve Devam Et'}\n            </button>\n          </form>\n\n          <div className=\"mt-6 pt-6 border-t border-gray-200 dark:border-gray-700\">\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n              G√ºvenli ≈üifre olu≈üturduktan sonra profil kurulum adƒ±mƒ±na ge√ßeceksiniz.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SetPassword; "],"names":["cachedApiUrl","apiUrlPromise","API_BASE_URL","process","clearApiUrlCache","console","log","getApiUrl","async","detectBackendPort","error","window","onboardingService","registerWithEmail","email","apiUrl","this","response","fetch","concat","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","verifyEmail","token","setPassword","password","confirmPassword","confirm_password","getLinkedInAuthUrl","handleLinkedInCallback","code","state","userId","user_id","uploadCV","file","formData","FormData","append","completeProfile","profileData","getOnboardingStatus","getTokenFromUrl","URLSearchParams","location","search","get","getLinkedInCallbackParams","urlParams","SetPassword","navigate","useNavigate","searchParams","useSearchParams","useState","setConfirmPassword","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","loading","setLoading","setError","passwordChecks","setPasswordChecks","length","uppercase","lowercase","number","special","useEffect","test","isPasswordValid","Object","values","every","check","doPasswordsMatch","_jsx","className","children","_jsxs","Lock","onSubmit","e","preventDefault","result","message","type","required","value","onChange","target","placeholder","onClick","EyeOff","Eye","key","text","map","_ref","CheckCircle","_Fragment","AlertCircle","disabled"],"sourceRoot":""}