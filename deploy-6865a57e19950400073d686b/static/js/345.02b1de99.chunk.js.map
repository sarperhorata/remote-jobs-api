{"version":3,"file":"static/js/345.02b1de99.chunk.js","mappings":"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","sources":["pages/ForgotPassword.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { getApiUrl } from '../utils/apiConfig';\nimport { Mail, ArrowLeft, CheckCircle } from '../components/icons/EmojiIcons';\n\nconst ForgotPassword: React.FC = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (!email) {\n        throw new Error('Please enter your email address');\n      }\n\n      // Basic email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        throw new Error('Please enter a valid email address');\n      }\n\n      console.log('üîë Requesting password reset...');\n      const API_BASE_URL = await getApiUrl();\n\n      const response = await fetch(`${API_BASE_URL}/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Failed to send reset email');\n      }\n\n      const data = await response.json();\n      console.log('‚úÖ Password reset email sent:', data);\n\n      setSuccess(true);\n\n    } catch (error: any) {\n      console.error('‚ùå Password reset failed:', error);\n      setError(error.message || 'Failed to send reset email. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8\">\n          <div className=\"text-center\">\n            <div className=\"w-20 h-20 bg-gradient-to-r from-green-500 to-emerald-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <CheckCircle className=\"w-10 h-10 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n              Check your email\n            </h2>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-8\">\n              We've sent a password reset link to <strong>{email}</strong>\n            </p>\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6\">\n              <p className=\"text-sm text-blue-800 dark:text-blue-200\">\n                If you don't see the email, check your spam folder. The link will expire in 1 hour.\n              </p>\n            </div>\n            <div className=\"space-y-4\">\n              <button\n                onClick={() => navigate('/login')}\n                className=\"w-full bg-gradient-to-r from-orange-500 to-yellow-500 text-white py-3 px-4 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium\"\n              >\n                Back to Sign In\n              </button>\n              <button\n                onClick={() => setSuccess(false)}\n                className=\"w-full bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-3 px-4 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors font-medium\"\n              >\n                Try another email\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div className=\"text-center\">\n          <Link \n            to=\"/login\"\n            className=\"inline-flex items-center text-orange-600 hover:text-orange-500 mb-6 transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4 mr-2\" />\n            Back to Sign In\n          </Link>\n          \n          <div className=\"w-20 h-20 bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n            <Mail className=\"w-10 h-10 text-white\" />\n          </div>\n          \n          <h2 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n            Forgot your password?\n          </h2>\n          <p className=\"text-gray-600 dark:text-gray-400\">\n            No worries! Enter your email and we'll send you a reset link.\n          </p>\n        </div>\n\n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"p-4 bg-red-100 border border-red-200 rounded-lg\">\n              <p className=\"text-sm text-red-700\">{error}</p>\n            </div>\n          )}\n\n          <div>\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n              Email Address\n            </label>\n            <div className=\"relative\">\n              <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n                <Mail className=\"h-5 w-5 text-gray-400\" />\n              </div>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"block w-full pl-10 pr-3 py-3 border border-gray-300 dark:border-gray-600 rounded-lg placeholder-gray-500 text-gray-900 dark:text-white dark:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:border-transparent\"\n                placeholder=\"Enter your email address\"\n              />\n            </div>\n          </div>\n\n          <button\n            type=\"submit\"\n            disabled={loading}\n            className=\"group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-lg text-white bg-gradient-to-r from-orange-500 to-yellow-500 hover:from-orange-600 hover:to-yellow-600 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-orange-500 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            {loading ? (\n              <div className=\"flex items-center\">\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\n                Sending...\n              </div>\n            ) : (\n              'Send Reset Link'\n            )}\n          </button>\n\n          <div className=\"text-center\">\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n              Remember your password?{' '}\n              <Link\n                to=\"/login\"\n                className=\"font-medium text-orange-600 hover:text-orange-500 transition-colors\"\n              >\n                Sign in here\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword; "],"names":["ForgotPassword","navigate","useNavigate","email","setEmail","useState","loading","setLoading","success","setSuccess","error","setError","_jsx","className","children","_jsxs","CheckCircle","onClick","Link","to","ArrowLeft","Mail","onSubmit","async","e","preventDefault","Error","test","console","log","API_BASE_URL","getApiUrl","response","fetch","concat","method","headers","body","JSON","stringify","ok","errorData","json","detail","data","message","htmlFor","id","name","type","autoComplete","required","value","onChange","target","placeholder","disabled"],"sourceRoot":""}