{"version":3,"file":"static/js/321.219cbfab.chunk.js","mappings":"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","sources":["utils/apiConfig.ts","components/AuthModal.tsx","components/Onboarding.tsx","components/MultiJobAutocomplete.tsx","services/jobService.ts","pages/Home.tsx"],"sourcesContent":["// Dinamik API URL detection sistemi\n// Backend için 8xxx portları (8001, 8000, 8002, vb.) kontrol eder\n// Frontend için 5xxx portları ile çalışabilir\n\ninterface PortConfig {\n  backendPorts: number[];\n  frontendPorts: number[];\n}\n\nconst portConfig: PortConfig = {\n  backendPorts: [8001, 8000, 8002, 8003, 8004], // 8001'i ilk sıraya aldım - stable port\n  frontendPorts: [3001, 3000, 5000, 5001, 5173], // Frontend için öncelik sırası\n};\n\n// API URL cache - Global değişkenler\nlet cachedApiUrl: string | null = null;\nlet apiUrlPromise: Promise<string> | null = null;\n\n// Sync API Base URL - fallback for components that need immediate access\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001';\n\n// Cache temizleme fonksiyonu\nexport const clearApiUrlCache = () => {\n  console.log('🧹 Clearing API URL cache');\n  cachedApiUrl = null;\n  apiUrlPromise = null;\n};\n\n// Backend port detection\nconst detectBackendPort = async (): Promise<string> => {\n  console.log('🔍 Starting backend port detection...');\n  \n  // Environment variable varsa onu kullan\n  if (process.env.REACT_APP_API_URL) {\n    console.log('✅ Using environment variable:', process.env.REACT_APP_API_URL);\n    return process.env.REACT_APP_API_URL;\n  }\n\n  // Test environment check - force port 8000 for tests\n  if (process.env.NODE_ENV === 'test') {\n    console.log('🧪 Test mode - forcing port 8000');\n    return 'http://localhost:8000';\n  }\n\n  // Backend portlarını sırayla test et\n  for (const port of portConfig.backendPorts) {\n    try {\n      console.log(`🔍 Testing backend on port ${port}...`);\n      const response = await fetch(`http://localhost:${port}/health`, {\n        method: 'GET',\n        signal: AbortSignal.timeout(2000), // 2 saniye timeout\n      });\n      \n      if (response.ok) {\n        console.log(`✅ Backend detected on port ${port}`);\n        return `http://localhost:${port}`;\n      }\n    } catch (error: any) {\n      // Port ulaşılabilir değil, bir sonrakini dene\n      console.log(`❌ Backend not found on port ${port}:`, error.message);\n    }\n  }\n\n  // Hiçbir port çalışmıyorsa varsayılan port\n  console.warn('⚠️ No backend found, using default port 8001');\n  return 'http://localhost:8001';\n};\n\nexport const getApiUrl = async (): Promise<string> => {\n  console.log('📡 getApiUrl called, cachedApiUrl:', cachedApiUrl);\n  \n  // Test ortamında her zaman cache'i temizle\n  if (process.env.NODE_ENV === 'test') {\n    console.log('🧪 Test mode - clearing cache for fresh detection');\n    clearApiUrlCache();\n  }\n  \n  // Cache varsa onu kullan\n  if (cachedApiUrl) {\n    console.log('📋 Using cached API URL:', cachedApiUrl);\n    return cachedApiUrl;\n  }\n\n  // Zaten bir detection çalışıyorsa aynı promise'i bekle\n  if (apiUrlPromise) {\n    console.log('⏳ Detection already in progress, waiting...');\n    return apiUrlPromise;\n  }\n\n  // Yeni detection başlat\n  console.log('🚀 Starting new detection...');\n  apiUrlPromise = detectBackendPort();\n  \n  try {\n    cachedApiUrl = await apiUrlPromise;\n    console.log('✅ Detection complete, cached URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } catch (error) {\n    console.error('❌ Backend detection failed:', error);\n    cachedApiUrl = 'http://localhost:8001'; // Fallback\n    console.log('🔄 Using fallback URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } finally {\n    apiUrlPromise = null; // Promise'i temizle\n  }\n};\n\n// Development/Production mode detection\nexport const isDevelopment = process.env.NODE_ENV === 'development';\nexport const isProduction = process.env.NODE_ENV === 'production';\nexport const isTest = process.env.NODE_ENV === 'test';\n\n// Current frontend port detection\nexport const getCurrentPort = (): number => {\n  if (typeof window === 'undefined') return 3000; // SSR or test environment\n  const port = parseInt(window.location.port);\n  return port || (window.location.protocol === 'https:' ? 443 : 80);\n};\n\n// Backend health check\nexport const checkBackendHealth = async (apiUrl?: string): Promise<boolean> => {\n  try {\n    const url = apiUrl || await getApiUrl();\n    const healthUrl = url.replace('/api', '/health');\n    \n    const response = await fetch(healthUrl, {\n      method: 'GET',\n      signal: AbortSignal.timeout(5000),\n    });\n    \n    return response.ok;\n  } catch (error) {\n    console.error('Backend health check failed:', error);\n    return false;\n  }\n};\n\n// Force cache temizleme - sadece gerekli durumlarda\nif (typeof window !== 'undefined' && process.env.NODE_ENV !== 'test') {\n  console.log('🔄 Initial page load - clearing API URL cache');\n  clearApiUrlCache();\n}\n\n// Test ortamında export edilen konfigürasyon objesi\nconst apiConfig = {\n  getApiUrl,\n  clearApiUrlCache,\n  checkBackendHealth,\n  getCurrentPort,\n  isDevelopment,\n  isProduction,\n  isTest,\n};\n\nexport default apiConfig; ","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getApiUrl } from '../utils/apiConfig';\n\n// Icons temporarily replaced with text\nconst User = () => <span>👤</span>;\nconst Eye = () => <span>👁️</span>;\nconst EyeOff = () => <span>🙈</span>;\nconst X = () => <span>✕</span>;\nconst Check = () => <span>✅</span>;\n\ninterface AuthModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  defaultTab?: 'login' | 'register';\n}\n\ninterface PasswordRequirement {\n  text: string;\n  isValid: boolean;\n}\n\nconst AuthModal: React.FC<AuthModalProps> = ({ isOpen, onClose, defaultTab = 'login' }) => {\n  const navigate = useNavigate();\n  const [activeTab, setActiveTab] = useState<'login' | 'register'>(defaultTab);\n  const [showPassword, setShowPassword] = useState(false);\n  const [showTermsModal, setShowTermsModal] = useState(false);\n  const [showPrivacyModal, setShowPrivacyModal] = useState(false);\n  \n  // Login form state\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  const [loginRememberMe, setLoginRememberMe] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const [loginError, setLoginError] = useState<string | null>(null);\n  \n  // Register form state\n  const [registerEmail, setRegisterEmail] = useState('');\n  const [registerFullName, setRegisterFullName] = useState('');\n  const [registerPassword, setRegisterPassword] = useState('');\n  const [agreedToTerms, setAgreedToTerms] = useState(false);\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const [registerError, setRegisterError] = useState<string | null>(null);\n  const [registerSuccess, setRegisterSuccess] = useState<string | null>(null);\n\n  // Password validation - updated requirements\n  const getPasswordRequirements = (password: string): PasswordRequirement[] => {\n    return [\n      {\n        text: \"At least 8 characters\",\n        isValid: password.length >= 8\n      },\n      {\n        text: \"At least 1 number\",\n        isValid: /\\d/.test(password)\n      },\n      {\n        text: \"At least 1 uppercase letter\",\n        isValid: /[A-Z]/.test(password)\n      }\n    ];\n  };\n\n  const passwordRequirements = getPasswordRequirements(registerPassword);\n  const isPasswordValid = passwordRequirements.every(req => req.isValid);\n\n  if (!isOpen) return null;\n\n  const handleGoogleLogin = async () => {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/auth/google/auth-url`);\n      const data = await response.json();\n      \n      if (data.auth_url) {\n        window.location.href = data.auth_url;\n      }\n    } catch (error) {\n      console.error('Google auth error:', error);\n    }\n  };\n\n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoginLoading(true);\n    setLoginError(null);\n    \n    try {\n      console.log('🔑 Attempting login with API...');\n      const API_BASE_URL = await getApiUrl();\n      \n      // FormData kullanarak OAuth2PasswordRequestForm formatına uygun gönder\n      const formData = new FormData();\n      formData.append('username', loginEmail);\n      formData.append('password', loginPassword);\n      \n      const response = await fetch(`${API_BASE_URL}/auth/login`, {\n        method: 'POST',\n        body: formData\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || 'Login failed');\n      }\n      \n      const data = await response.json();\n      \n      // Token'ı localStorage'a kaydet\n      localStorage.setItem('auth_token', data.access_token);\n      localStorage.setItem('userToken', data.access_token); // Compatibility\n      \n      console.log('✅ Login successful!');\n      onClose();\n      \n      // Sayfayı yenile veya state'i güncelle\n      window.location.reload();\n      \n    } catch (err: any) {\n      console.error('❌ Login error:', err);\n      setLoginError(err.message || 'Login failed. Please check your credentials.');\n    } finally {\n      setLoginLoading(false);\n    }\n  };\n\n  const handleRegister = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setRegisterLoading(true);\n    setRegisterError(null);\n    setRegisterSuccess(null);\n    \n    try {\n      // Basic validations\n      if (!registerEmail || !registerFullName || !registerPassword) {\n        throw new Error('Please fill in all required fields');\n      }\n      \n      if (!isPasswordValid) {\n        throw new Error('Password must meet all requirements');\n      }\n      \n      if (!agreedToTerms) {\n        throw new Error('Please agree to the Terms of Service');\n      }\n      \n      console.log('🔑 Attempting registration with API...');\n      const API_BASE_URL = await getApiUrl();\n      \n      const response = await fetch(`${API_BASE_URL}/auth/register`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          email: registerEmail,\n          name: registerFullName,\n          password: registerPassword\n        })\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        if (errorData.detail && Array.isArray(errorData.detail)) {\n          // Pydantic validation errors\n          const errorMessage = errorData.detail.map((err: any) => err.msg).join(', ');\n          throw new Error(errorMessage);\n        }\n        throw new Error(errorData.detail || 'Registration failed');\n      }\n      \n      const data = await response.json();\n      console.log('✅ Registration successful:', data);\n      \n      setRegisterSuccess('Registration successful! Please check your email to login');\n      setTimeout(() => {\n        onClose();\n        window.location.reload();\n      }, 30000); // 30 seconds display\n      \n    } catch (error: any) {\n      console.error('❌ Registration failed:', error);\n      setRegisterError(error.message || 'Registration failed. Please try again.');\n    } finally {\n      setRegisterLoading(false);\n    }\n  };\n\n  const handleGoogleAuth = async () => {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/auth/google/auth-url`);\n      const data = await response.json();\n      \n      if (data.auth_url) {\n        window.location.href = data.auth_url;\n      }\n    } catch (error) {\n      console.error('Google auth error:', error);\n    }\n  };\n\n  const openTermsModal = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setShowTermsModal(true);\n  };\n\n  const openPrivacyModal = (e: React.MouseEvent) => {\n    e.preventDefault();\n    setShowPrivacyModal(true);\n  };\n\n  const closeTermsModal = () => setShowTermsModal(false);\n  const closePrivacyModal = () => setShowPrivacyModal(false);\n\n  // Terms of Service Modal Component\n  const TermsModal = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60] p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Terms of Service</h2>\n          <button \n            onClick={closeTermsModal} \n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 text-2xl font-light\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"overflow-y-auto p-6 flex-1\">\n          <div className=\"prose max-w-none\">\n            <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\n              Welcome to Buzz2Remote. By using our service, you agree to these terms.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">1. Service Description</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              Buzz2Remote is a job search platform that connects remote job seekers with employers.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">2. User Responsibilities</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              Users must provide accurate information and use the platform responsibly.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">3. Privacy</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              We respect your privacy and handle your data according to our Privacy Policy.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // Privacy Policy Modal Component\n  const PrivacyModal = () => (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[60] p-4\">\n      <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden flex flex-col\">\n        <div className=\"flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700\">\n          <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Privacy Policy</h2>\n          <button \n            onClick={closePrivacyModal} \n            className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 text-2xl font-light\"\n          >\n            ×\n          </button>\n        </div>\n        <div className=\"overflow-y-auto p-6 flex-1\">\n          <div className=\"prose max-w-none\">\n            <p className=\"text-gray-700 dark:text-gray-300 leading-relaxed\">\n              This Privacy Policy describes how we collect, use, and protect your information.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">Information We Collect</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              We collect information you provide directly to us, such as when you create an account.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">How We Use Information</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              We use your information to provide and improve our services.\n            </p>\n            <h3 className=\"text-lg font-semibold mt-4 mb-2\">Data Security</h3>\n            <p className=\"text-gray-700 dark:text-gray-300\">\n              We implement appropriate security measures to protect your personal information.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  return (\n    <>\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-md max-h-[90vh] overflow-y-auto\">\n          {/* Header */}\n          <div className=\"flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center\">\n                <div className=\"w-5 h-5 text-white flex items-center justify-center\">\n                  <User />\n                </div>\n              </div>\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">Buzz2Remote</h2>\n            </div>\n            <button \n              onClick={onClose} \n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 text-2xl font-light\"\n            >\n              ×\n            </button>\n          </div>\n\n          {/* Tabs */}\n          <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\n            <button\n              onClick={() => setActiveTab('login')}\n              className={`flex-1 py-4 px-6 text-sm font-medium text-center border-b-2 transition-colors ${\n                activeTab === 'login'\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n              }`}\n            >\n                Sign In\n              </button>\n            <button\n              onClick={() => setActiveTab('register')}\n              className={`flex-1 py-4 px-6 text-sm font-medium text-center border-b-2 transition-colors ${\n                activeTab === 'register'\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\n                  : 'border-transparent text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200'\n              }`}\n            >\n              Create Account\n            </button>\n          </div>\n\n          {/* Content */}\n          <div className=\"p-6\">\n            {activeTab === 'login' ? (\n              /* Login Form */\n              <form onSubmit={handleLogin} className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Welcome back!\n                </h3>\n                \n                {loginError && (\n                  <div className=\"p-3 text-sm text-red-700 bg-red-100 border border-red-200 rounded-lg\">\n                    {loginError}\n                  </div>\n                )}\n\n                <div>\n                  <label htmlFor=\"loginEmail\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    type=\"email\" required value={loginEmail}\n                    onChange={(e) => setLoginEmail(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"your@email.com\"\n                  />\n                </div>\n\n                <div>\n                  <div className=\"flex items-center justify-between mb-1\">\n                    <label htmlFor=\"loginPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300\">\n                      Password\n                    </label>\n                    <button \n                      type=\"button\" \n                      onClick={() => {\n                        onClose();\n                        navigate('/forgot-password');\n                      }}\n                      className=\"text-xs text-orange-600 hover:text-orange-500 underline\"\n                    >\n                      Forgot Password?\n                    </button>\n                  </div>\n                  <div className=\"relative\">\n                    <input\n                      id=\"loginPassword\"\n                      type={showPassword ? 'text' : 'password'} \n                      required \n                      value={loginPassword}\n                      onChange={(e) => setLoginPassword(e.target.value)}\n                      className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                      placeholder=\"Your password\"\n                    />\n                    <button\n                      type=\"button\"\n                      onClick={() => setShowPassword(!showPassword)}\n                      className=\"absolute right-3 top-2.5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 focus:outline-none\"\n                    >\n                      <div className=\"w-4 h-4 flex items-center justify-center\">\n                        {showPassword ? <EyeOff /> : <Eye />}\n                      </div>\n                    </button>\n                  </div>\n                </div>\n\n                <div className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={loginRememberMe}\n                    onChange={(e) => setLoginRememberMe(e.target.checked)}\n                    className=\"h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded\"\n                  />\n                  <span className=\"ml-2 text-sm text-gray-600 dark:text-gray-400\">Remember me</span>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={loginLoading}\n                  className=\"w-full bg-gradient-to-r from-orange-500 to-yellow-500 text-white py-3 px-4 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {loginLoading ? 'Signing in...' : 'Sign In'}\n                </button>\n\n                <div className=\"relative my-6\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-sm\">\n                    <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500\">Or continue with</span>\n                  </div>\n                </div>\n\n                <button\n                  type=\"button\"\n                  onClick={handleGoogleLogin}\n                  className=\"w-full flex items-center justify-center space-x-2 bg-white border border-gray-300 text-gray-700 py-3 px-4 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                    <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  <span>Sign in with Google</span>\n                </button>\n              </form>\n            ) : (\n              /* Register Form */\n              <form onSubmit={handleRegister} className=\"space-y-4\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Create Account\n                </h3>\n                \n                {registerError && (\n                  <div className=\"p-3 text-sm text-red-700 bg-red-100 border border-red-200 rounded-lg\">\n                    {registerError}\n                  </div>\n                )}\n\n                {registerSuccess && (\n                  <div className=\"p-3 text-sm text-green-700 bg-green-100 border border-green-200 rounded-lg\">\n                    {registerSuccess}\n                  </div>\n                )}\n\n                <div>\n                  <label htmlFor=\"registerEmail\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Email Address\n                  </label>\n                  <input\n                    id=\"registerEmail\" \n                    type=\"email\" \n                    required \n                    value={registerEmail}\n                    onChange={(e) => setRegisterEmail(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"your@email.com\"\n                  />\n                </div>\n\n                <div>\n                  <label htmlFor=\"registerFullName\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                    Full Name\n                  </label>\n                  <input\n                    id=\"registerFullName\" \n                    type=\"text\" \n                    required \n                    value={registerFullName}\n                    onChange={(e) => setRegisterFullName(e.target.value)}\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                    placeholder=\"John Doe\"\n                  />\n                </div>\n\n                <div className=\"grid grid-cols-1 gap-4\">\n                  {/* Password Field */}\n                  <div>\n                    <label htmlFor=\"registerPassword\" className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\n                      Password\n                      {!isPasswordValid && registerPassword.length > 0 && (\n                        <div className=\"relative inline-block ml-2\">\n                          <div className=\"group cursor-help\">\n                            <span className=\"w-4 h-4 text-red-500 inline-flex items-center justify-center\">\n                              <X />\n                            </span>\n                            <div className=\"absolute z-50 left-0 mt-2 w-64 p-3 bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-600 rounded-lg shadow-lg opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none\">\n                              <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                                Password Requirements:\n                              </div>\n                              <div className=\"space-y-1\">\n                                {passwordRequirements.map((requirement, index) => (\n                                  <div key={index} className=\"flex items-center space-x-2\">\n                                    <div className=\"w-3 h-3 flex items-center justify-center\">\n                                      {requirement.isValid ? (\n                                        <span className=\"text-green-500\"><Check /></span>\n                                      ) : (\n                                        <span className=\"text-red-500\"><X /></span>\n                                      )}\n                                    </div>\n                                    <span className={`text-xs ${\n                                      requirement.isValid ? 'text-green-700 dark:text-green-400' : 'text-red-700 dark:text-red-400'\n                                    }`}>\n                                      {requirement.text}\n                                    </span>\n                                  </div>\n                                ))}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </label>\n                    <div className=\"relative\">\n                      <input\n                        id=\"registerPassword\"\n                        type={showPassword ? 'text' : 'password'}\n                        required\n                        value={registerPassword}\n                        onChange={(e) => setRegisterPassword(e.target.value)}\n                        className=\"w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                        placeholder=\"Create a strong password\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => setShowPassword(!showPassword)}\n                        className=\"absolute right-3 top-2.5 text-gray-400 hover:text-gray-600\"\n                      >\n                        <div className=\"w-4 h-4 flex items-center justify-center\">\n                          {showPassword ? <EyeOff /> : <Eye />}\n                        </div>\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"flex items-start\">\n                  <input\n                    id=\"agreedToTerms\"\n                    type=\"checkbox\"\n                    required\n                    checked={agreedToTerms}\n                    onChange={(e) => setAgreedToTerms(e.target.checked)}\n                    className=\"h-4 w-4 text-orange-600 focus:ring-orange-500 border-gray-300 rounded mt-1\"\n                  />\n                  <label htmlFor=\"agreedToTerms\" className=\"ml-2 text-sm text-gray-600 dark:text-gray-400\">\n                    I agree to the{' '}\n                    <button \n                      type=\"button\" \n                      onClick={openTermsModal}\n                      className=\"text-orange-600 hover:text-orange-500 underline\"\n                    >\n                      Terms of Service\n                    </button>\n                    {' '}and{' '}\n                    <button \n                      type=\"button\" \n                      onClick={openPrivacyModal}\n                      className=\"text-orange-600 hover:text-orange-500 underline\"\n                    >\n                      Privacy Policy\n                    </button>\n                  </label>\n                </div>\n\n                <button\n                  type=\"submit\"\n                  disabled={registerLoading || !isPasswordValid || !agreedToTerms}\n                  className=\"w-full bg-gradient-to-r from-orange-500 to-yellow-500 text-white py-3 px-4 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {registerLoading ? 'Creating Account...' : 'Create Account'}\n                </button>\n\n                <div className=\"relative my-6\">\n                  <div className=\"absolute inset-0 flex items-center\">\n                    <div className=\"w-full border-t border-gray-300 dark:border-gray-600\" />\n                  </div>\n                  <div className=\"relative flex justify-center text-sm\">\n                    <span className=\"px-2 bg-white dark:bg-gray-800 text-gray-500\">Or continue with</span>\n                  </div>\n                </div>\n\n                <button\n                  type=\"button\"\n                  onClick={handleGoogleAuth}\n                  className=\"w-full flex items-center justify-center space-x-2 bg-white border border-gray-300 text-gray-700 py-3 px-4 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n                >\n                  <svg className=\"w-5 h-5\" viewBox=\"0 0 24 24\">\n                    <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                    <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                    <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                    <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                  </svg>\n                  <span>Sign up with Google</span>\n              </button>\n              </form>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Modals */}\n      {showTermsModal && <TermsModal />}\n      {showPrivacyModal && <PrivacyModal />}\n    </>\n  );\n};\n\nexport default AuthModal; ","import React, { useState } from 'react';\nimport { User, \n  MapPin, \n  Briefcase, \n  Star, \n  CheckCircle, \n  ArrowRight, \n  ArrowLeft,\n  Bell,\n  Target,\n  Zap } from './icons/EmojiIcons';\n\ninterface OnboardingProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n}\n\ninterface UserProfile {\n  fullName: string;\n  email: string;\n  location: string;\n  jobTitle: string;\n  experience: string;\n  skills: string[];\n  preferences: {\n    jobTypes: string[];\n    salaryRange: string;\n    remoteOnly: boolean;\n    notifications: boolean;\n  };\n}\n\nconst Onboarding: React.FC<OnboardingProps> = ({ isOpen, onClose, onComplete }) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [profile, setProfile] = useState<UserProfile>({\n    fullName: '',\n    email: '',\n    location: '',\n    jobTitle: '',\n    experience: '',\n    skills: [],\n    preferences: {\n      jobTypes: [],\n      salaryRange: '',\n      remoteOnly: true,\n      notifications: true\n    }\n  });\n\n  const totalSteps = 5;\n\n  const skillOptions = [\n    'React', 'Vue.js', 'Angular', 'Node.js', 'Python', 'Java', 'JavaScript', 'TypeScript',\n    'AWS', 'Docker', 'Kubernetes', 'MongoDB', 'PostgreSQL', 'GraphQL', 'REST APIs',\n    'Machine Learning', 'Data Science', 'UI/UX Design', 'Product Management', 'DevOps'\n  ];\n\n  const jobTypeOptions = [\n    { value: 'full-time', label: 'Full-time' },\n    { value: 'part-time', label: 'Part-time' },\n    { value: 'contract', label: 'Contract' },\n    { value: 'freelance', label: 'Freelance' }\n  ];\n\n  const experienceOptions = [\n    { value: 'entry', label: 'Entry Level (0-2 years)' },\n    { value: 'mid', label: 'Mid Level (2-5 years)' },\n    { value: 'senior', label: 'Senior Level (5+ years)' },\n    { value: 'lead', label: 'Lead/Principal' },\n    { value: 'executive', label: 'Executive' }\n  ];\n\n  const salaryRanges = [\n    { value: '0-50k', label: '$0 - $50k' },\n    { value: '50k-80k', label: '$50k - $80k' },\n    { value: '80k-120k', label: '$80k - $120k' },\n    { value: '120k-150k', label: '$120k - $150k' },\n    { value: '150k+', label: '$150k+' }\n  ];\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleComplete();\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleComplete = () => {\n    // Save profile data\n    localStorage.setItem('userProfile', JSON.stringify(profile));\n    localStorage.setItem('onboardingCompleted', 'true');\n    onComplete();\n  };\n\n  const handleSkillToggle = (skill: string) => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.includes(skill)\n        ? prev.skills.filter(s => s !== skill)\n        : [...prev.skills, skill]\n    }));\n  };\n\n  const handleJobTypeToggle = (jobType: string) => {\n    setProfile(prev => ({\n      ...prev,\n      preferences: {\n        ...prev.preferences,\n        jobTypes: prev.preferences.jobTypes.includes(jobType)\n          ? prev.preferences.jobTypes.filter(t => t !== jobType)\n          : [...prev.preferences.jobTypes, jobType]\n      }\n    }));\n  };\n\n  if (!isOpen) return null;\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-20 h-20 bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Zap className=\"w-10 h-10 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Welcome to Buzz2Remote! 🎉</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-md mx-auto\">\n              Let's set up your profile to find the perfect remote opportunities tailored just for you.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <Target className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">AI-Powered Matching</h3>\n                <p className=\"text-sm text-gray-600\">Get personalized job recommendations</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <CheckCircle className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">One-Click Apply</h3>\n                <p className=\"text-sm text-gray-600\">Apply instantly with your saved profile</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <Bell className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Smart Alerts</h3>\n                <p className=\"text-sm text-gray-600\">Never miss your dream job</p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <User className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Tell us about yourself</h2>\n              <p className=\"text-gray-600\">Basic information to get started</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label>\n                <input\n                  id=\"fullName\"\n                  type=\"text\"\n                  value={profile.fullName}\n                  onChange={(e) => setProfile(prev => ({ ...prev, fullName: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={profile.email}\n                  onChange={(e) => setProfile(prev => ({ ...prev, email: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter your email address\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">Location</label>\n                <div className=\"relative\">\n                  <MapPin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                  <input\n                    id=\"location\"\n                    type=\"text\"\n                    value={profile.location}\n                    onChange={(e) => setProfile(prev => ({ ...prev, location: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"e.g. San Francisco, CA or Remote\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 3:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Briefcase className=\"w-8 h-8 text-green-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Your professional background</h2>\n              <p className=\"text-gray-600\">Help us understand your experience level</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"jobTitle\" className=\"block text-sm font-medium text-gray-700 mb-2\">Current/Desired Job Title</label>\n                <input\n                  id=\"jobTitle\"\n                  type=\"text\"\n                  value={profile.jobTitle}\n                  onChange={(e) => setProfile(prev => ({ ...prev, jobTitle: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"e.g. Frontend Developer, Product Manager\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Experience Level</label>\n                <div className=\"grid grid-cols-1 gap-3\">\n                  {experienceOptions.map(option => (\n                    <label key={option.value} className=\"flex items-center cursor-pointer\">\n                      <input\n                        id={`experience-${option.value}`}\n                        type=\"radio\"\n                        name=\"experience\"\n                        value={option.value}\n                        checked={profile.experience === option.value}\n                        onChange={(e) => setProfile(prev => ({ ...prev, experience: e.target.value }))}\n                        className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-gray-700\">{option.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 4:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Star className=\"w-8 h-8 text-purple-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Your skills & expertise</h2>\n              <p className=\"text-gray-600\">Select the skills you have experience with</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-4\">\n                  Skills (Select all that apply)\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                  {skillOptions.map(skill => (\n                    <button\n                      key={skill}\n                      onClick={() => handleSkillToggle(skill)}\n                      className={`px-4 py-2 rounded-lg border text-sm font-medium transition-colors ${\n                        profile.skills.includes(skill)\n                          ? 'bg-blue-600 text-white border-blue-600'\n                          : 'bg-white text-gray-700 border-gray-300 hover:border-blue-500'\n                      }`}\n                    >\n                      {skill}\n                    </button>\n                  ))}\n                </div>\n                <p className=\"text-sm text-gray-500 mt-3\">\n                  Selected: {profile.skills.length} skills\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 5:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"w-8 h-8 text-orange-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Job preferences</h2>\n              <p className=\"text-gray-600\">Set your job search preferences</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Job Types</label>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {jobTypeOptions.map(option => (\n                    <button\n                      key={option.value}\n                      onClick={() => handleJobTypeToggle(option.value)}\n                      className={`px-4 py-3 rounded-lg border text-sm font-medium transition-colors ${\n                        profile.preferences.jobTypes.includes(option.value)\n                          ? 'bg-blue-600 text-white border-blue-600'\n                          : 'bg-white text-gray-700 border-gray-300 hover:border-blue-500'\n                      }`}\n                    >\n                      {option.label}\n                    </button>\n                  ))}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Salary Range</label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {salaryRanges.map(range => (\n                    <label key={range.value} className=\"flex items-center cursor-pointer\">\n                      <input\n                        id={`salary-${range.value}`}\n                        type=\"radio\"\n                        name=\"salaryRange\"\n                        value={range.value}\n                        checked={profile.preferences.salaryRange === range.value}\n                        onChange={(e) => setProfile(prev => ({\n                          ...prev,\n                          preferences: { ...prev.preferences, salaryRange: e.target.value }\n                        }))}\n                        className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-gray-700\">{range.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <label className=\"flex items-center cursor-pointer\">\n                  <input\n                    id=\"remoteOnly\"\n                    type=\"checkbox\"\n                    checked={profile.preferences.remoteOnly}\n                    onChange={(e) => setProfile(prev => ({\n                      ...prev,\n                      preferences: { ...prev.preferences, remoteOnly: e.target.checked }\n                    }))}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"text-gray-700\">Remote jobs only</span>\n                </label>\n                \n                <label className=\"flex items-center cursor-pointer\">\n                  <input\n                    id=\"notifications\"\n                    type=\"checkbox\"\n                    checked={profile.preferences.notifications}\n                    onChange={(e) => setProfile(prev => ({\n                      ...prev,\n                      preferences: { ...prev.preferences, notifications: e.target.checked }\n                    }))}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"text-gray-700\">Email notifications for new jobs</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"px-8 py-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-500\">\n                Step {currentStep} of {totalSteps}\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 text-2xl\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {/* Progress Bar */}\n          <div className=\"mt-4\">\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div\n                className=\"bg-gradient-to-r from-orange-500 to-yellow-500 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"px-8 py-8\">\n          {renderStep()}\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-8 py-6 border-t border-gray-200 flex items-center justify-between\">\n          <button\n            onClick={handlePrevious}\n            disabled={currentStep === 1}\n            className=\"flex items-center space-x-2 px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            <span>Previous</span>\n          </button>\n          \n          <div className=\"flex space-x-2\">\n            {[...Array(totalSteps)].map((_, i) => (\n              <div\n                key={i}\n                className={`w-2 h-2 rounded-full ${\n                  i + 1 <= currentStep ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              />\n            ))}\n          </div>\n          \n          <button\n            onClick={handleNext}\n            className=\"flex items-center space-x-2 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-6 py-3 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium\"\n          >\n            <span>{currentStep === totalSteps ? 'Complete Setup' : 'Next'}</span>\n            <ArrowRight className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding; ","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { API_BASE_URL } from '../utils/apiConfig';\n\n// Icons temporarily replaced with text\nconst Search = () => <span>🔍</span>;\nconst ChevronDown = () => <span>▼</span>;\nconst X = () => <span>✕</span>;\nconst Plus = () => <span>+</span>;\nconst Trash2 = () => <span>🗑️</span>;\n\ninterface Position {\n  title: string;\n  count: number;\n  category?: string;\n}\n\ninterface MultiJobAutocompleteProps {\n  selectedPositions: Position[];\n  onPositionsChange: (positions: Position[]) => void;\n  onSearch?: (positions: Position[]) => void;\n  placeholder?: string;\n  maxSelections?: number;\n}\n\nconst MultiJobAutocomplete: React.FC<MultiJobAutocompleteProps> = ({\n  selectedPositions,\n  onPositionsChange,\n  onSearch,\n  placeholder = \"Search and select job titles (up to 10)\",\n  maxSelections = 10\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [positions, setPositions] = useState<Position[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\n  \n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const searchTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  const fetchPositions = useCallback(async (query: string) => {\n    if (!query.trim() || query.length < 2) {\n      setPositions([]);\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const apiUrl = `${API_BASE_URL}/v1/jobs/job-titles/search?q=${encodeURIComponent(query)}&limit=20`;\n      console.log('🔍 MultiAutocomplete API URL:', apiUrl);\n      const response = await fetch(apiUrl);\n      \n      if (response.ok) {\n        const data = await response.json();\n        // Backend returns array directly, not nested in job_titles\n        const positions = Array.isArray(data) ? data : data.job_titles || [];\n        // Ensure each position has required fields\n        const formattedPositions = positions.map((item: any) => ({\n          title: item.title,\n          count: item.count || 1,\n          category: item.category || 'Technology'\n        }));\n        console.log('🔍 MultiAutocomplete formatted positions:', formattedPositions);\n        setPositions(formattedPositions);\n      } else {\n        console.error('❌ Failed to fetch job titles, status:', response.status);\n        setPositions([]);\n      }\n    } catch (error) {\n      console.error('❌ Error fetching job titles:', error);\n      console.error('❌ API_BASE_URL was:', API_BASE_URL);\n      setPositions([]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  // Debounced search effect\n  useEffect(() => {\n    if (searchTimeoutRef.current) {\n      clearTimeout(searchTimeoutRef.current);\n    }\n\n    if (inputValue.trim()) {\n      searchTimeoutRef.current = setTimeout(() => {\n        fetchPositions(inputValue);\n      }, 300);\n    } else {\n      setPositions([]);\n    }\n\n    return () => {\n      if (searchTimeoutRef.current) {\n        clearTimeout(searchTimeoutRef.current);\n      }\n    };\n  }, [inputValue, fetchPositions]);\n\n  // Handle input changes\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setInputValue(value);\n    setIsOpen(true);\n    setHighlightedIndex(-1);\n  };\n\n  // Handle position selection\n  const handlePositionSelect = (position: Position) => {\n    // Check if position is already selected\n    if (selectedPositions.find(p => p.title.toLowerCase() === position.title.toLowerCase())) {\n      return; // Already selected\n    }\n\n    // Check max selections\n    if (selectedPositions.length >= maxSelections) {\n      alert(`Maximum ${maxSelections} positions can be selected.`);\n      return;\n    }\n\n    // Add position to selected list\n    const newSelectedPositions = [...selectedPositions, position];\n    onPositionsChange(newSelectedPositions);\n    \n    // Clear input and close dropdown\n    setInputValue('');\n    setIsOpen(false);\n    setPositions([]);\n    \n    // Focus back to input\n    setTimeout(() => {\n      inputRef.current?.focus();\n    }, 100);\n  };\n\n  // Remove selected position\n  const removePosition = (positionToRemove: Position) => {\n    const newSelectedPositions = selectedPositions.filter(\n      p => p.title.toLowerCase() !== positionToRemove.title.toLowerCase()\n    );\n    onPositionsChange(newSelectedPositions);\n  };\n\n  // Clear all selections\n  const clearAllSelections = () => {\n    onPositionsChange([]);\n    setInputValue('');\n    setIsOpen(false);\n    setPositions([]);\n  };\n\n  // Handle keyboard navigation\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (!isOpen) return;\n\n    switch (e.key) {\n      case 'ArrowDown':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev < positions.length - 1 ? prev + 1 : 0\n        );\n        break;\n      \n      case 'ArrowUp':\n        e.preventDefault();\n        setHighlightedIndex(prev => \n          prev > 0 ? prev - 1 : positions.length - 1\n        );\n        break;\n      \n      case 'Enter':\n        e.preventDefault();\n        if (highlightedIndex >= 0 && highlightedIndex < positions.length) {\n          handlePositionSelect(positions[highlightedIndex]);\n        }\n        break;\n      \n      case 'Escape':\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n        break;\n    }\n  };\n\n  // Handle search button click\n  const handleSearch = () => {\n    if (selectedPositions.length === 0) {\n      alert('Please select at least one job position to search.');\n      return;\n    }\n    \n    if (onSearch) {\n      onSearch(selectedPositions);\n    }\n  };\n\n  // Click outside to close dropdown\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node)) {\n        setIsOpen(false);\n        setHighlightedIndex(-1);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // Filter out already selected positions\n  const availablePositions = positions.filter(\n    pos => !selectedPositions.find(selected => \n      selected.title.toLowerCase() === pos.title.toLowerCase()\n    )\n  );\n\n  return (\n    <div className=\"w-full\" ref={dropdownRef}>\n      {/* Selected positions display */}\n      {selectedPositions.length > 0 && (\n        <div className=\"mb-3\">\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-sm font-medium text-gray-700\">\n              Selected Positions ({selectedPositions.length}/{maxSelections}):\n            </span>\n            <button\n              onClick={clearAllSelections}\n              className=\"text-xs text-red-600 hover:text-red-700 flex items-center gap-1\"\n            >\n              <Trash2 />\n              Clear All\n            </button>\n          </div>\n          <div className=\"flex flex-wrap gap-2\">\n            {selectedPositions.map((position, index) => (\n              <div\n                key={index}\n                className=\"flex items-center gap-2 bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm\"\n              >\n                <span className=\"truncate max-w-40\">{position.title}</span>\n                {position.count && (\n                  <span className=\"text-blue-600 text-xs\">({position.count})</span>\n                )}\n                <button\n                  onClick={() => removePosition(position)}\n                  className=\"text-blue-600 hover:text-blue-800 flex-shrink-0\"\n                >\n                  <X />\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Search input */}\n      <div className=\"relative\">\n        <div className=\"flex gap-2\">\n          <div className=\"relative flex-1\">\n            <div className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5 flex items-center justify-center\">\n              <Search />\n            </div>\n            <input\n              ref={inputRef}\n              type=\"text\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={handleKeyDown}\n              onFocus={() => setIsOpen(true)}\n              placeholder={placeholder}\n              className=\"w-full pl-10 pr-10 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-colors\"\n              disabled={selectedPositions.length >= maxSelections}\n            />\n            \n            {isLoading && (\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                <div className=\"w-5 h-5 border-2 border-blue-500 border-t-transparent rounded-full animate-spin\"></div>\n              </div>\n            )}\n            \n            {!isLoading && positions.length > 0 && (\n              <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5 flex items-center justify-center\">\n                <ChevronDown />\n              </div>\n            )}\n          </div>\n          \n          <button\n            onClick={handleSearch}\n            disabled={selectedPositions.length === 0}\n            className=\"px-6 py-3 bg-gradient-to-r from-orange-500 to-yellow-500 text-white rounded-lg hover:from-orange-600 hover:to-yellow-600 disabled:bg-gray-300 disabled:cursor-not-allowed transition-colors font-medium flex items-center gap-2\"\n          >\n            <Search />\n            Search\n          </button>\n        </div>\n\n        {/* Dropdown */}\n        {isOpen && (\n          <div className=\"absolute z-50 w-full mt-1 bg-white border border-gray-200 rounded-lg shadow-lg max-h-60 overflow-y-auto\">\n            {isLoading ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"w-6 h-6 border-2 border-blue-500 border-t-transparent rounded-full animate-spin mx-auto mb-2\"></div>\n                Searching positions...\n              </div>\n            ) : availablePositions.length > 0 ? (\n              <>\n                <div className=\"px-3 py-2 text-xs text-gray-500 border-b border-gray-100\">\n                  {availablePositions.length} position{availablePositions.length !== 1 ? 's' : ''} found\n                </div>\n                {availablePositions.map((position, index) => (\n                  <button\n                    key={index}\n                    onClick={() => handlePositionSelect(position)}\n                    className={`w-full px-4 py-3 text-left hover:bg-gray-50 flex items-center justify-between group ${\n                      index === highlightedIndex ? 'bg-blue-50' : ''\n                    }`}\n                  >\n                    <div className=\"flex-1 min-w-0\">\n                      <div className=\"font-medium text-gray-900 truncate\">\n                        {position.title}\n                      </div>\n                      {position.category && (\n                        <div className=\"text-sm text-gray-500\">\n                          {position.category}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"flex items-center gap-2 ml-3\">\n                      {position.count && (\n                        <span className=\"text-sm text-gray-500\">\n                          {position.count} jobs\n                        </span>\n                      )}\n                      <Plus />\n                    </div>\n                  </button>\n                ))}\n              </>\n            ) : inputValue.trim().length >= 2 && !isLoading ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                <div className=\"w-6 h-6 mx-auto mb-2 text-gray-300 flex items-center justify-center\">\n                  <Search />\n                </div>\n                No positions found for \"{inputValue}\"\n              </div>\n            ) : inputValue.trim().length > 0 && inputValue.trim().length < 2 ? (\n              <div className=\"p-4 text-center text-gray-500\">\n                Type at least 2 characters to search\n              </div>\n            ) : null}\n          </div>\n        )}\n      </div>\n\n      {/* Help text */}\n      <div className=\"mt-2 text-xs text-gray-500\">\n        {selectedPositions.length === 0 ? (\n          \"Start typing to search job positions. You can select up to \" + maxSelections + \" positions.\"\n        ) : (\n          `${selectedPositions.length}/${maxSelections} positions selected. ${selectedPositions.length === maxSelections ? 'Maximum reached.' : 'Add more or search now.'}`\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MultiJobAutocomplete; ","import { Job, JobApplication } from '../types/job';\nimport { getApiUrl } from '../utils/apiConfig';\n\n// Helper functions for local storage\nconst APPLICATIONS_KEY = 'applications';\nconst SAVED_JOBS_KEY = 'savedJobs';\n\nconst getApplications = (): JobApplication[] => {\n  const stored = localStorage.getItem(APPLICATIONS_KEY);\n  return stored ? JSON.parse(stored) : [];\n};\n\nconst saveApplication = (application: JobApplication) => {\n  const applications = getApplications();\n  applications.push(application);\n  localStorage.setItem(APPLICATIONS_KEY, JSON.stringify(applications));\n};\n\nconst getSavedJobs = (): string[] => {\n  const stored = localStorage.getItem(SAVED_JOBS_KEY);\n  return stored ? JSON.parse(stored) : [];\n};\n\nconst saveJob = (jobId: string) => {\n  const savedJobs = getSavedJobs();\n  if (!savedJobs.includes(jobId)) {\n    savedJobs.push(jobId);\n    localStorage.setItem(SAVED_JOBS_KEY, JSON.stringify(savedJobs));\n  }\n};\n\nconst unsaveJob = (jobId: string) => {\n  const savedJobs = getSavedJobs();\n  const updated = savedJobs.filter(id => id !== jobId);\n  localStorage.setItem(SAVED_JOBS_KEY, JSON.stringify(updated));\n};\n\n// Real API functions with dynamic URL detection\nexport const getJobs = async (params: any = {}): Promise<{ items?: Job[]; jobs?: Job[]; total: number; total_pages?: number; }> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const searchParams = new URLSearchParams();\n    \n    if (params.page) searchParams.append('skip', ((params.page - 1) * 10).toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    if (params.company) searchParams.append('company', params.company);\n    if (params.location) searchParams.append('location', params.location);\n    if (params.sort_by) searchParams.append('sort_by', params.sort_by);\n    \n    const response = await fetch(`${API_BASE_URL}/jobs/?${searchParams}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch jobs');\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n    // Return empty result on error\n    return { items: [], jobs: [], total: 0 };\n  }\n};\n\nexport const getJobById = async (id: string): Promise<Job | null> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/${id}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch job');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching job:', error);\n    return null;\n  }\n};\n\nexport const getSimilarJobs = async (jobId: string): Promise<Job[]> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/similar`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch similar jobs');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching similar jobs:', error);\n    return [];\n  }\n};\n\nexport const searchJobs = async (query: string, params: any = {}): Promise<Job[]> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const searchParams = new URLSearchParams();\n    searchParams.append('query', query);\n    \n    if (params.skip) searchParams.append('skip', params.skip.toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    \n    const response = await fetch(`${API_BASE_URL}/jobs/search/?${searchParams}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to search jobs');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error searching jobs:', error);\n    return [];\n  }\n};\n\nexport const getJobStatistics = async () => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/statistics/`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch job statistics');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching job statistics:', error);\n    return {\n      total_jobs: 0,\n      jobs_by_company: [],\n      jobs_by_location: []\n    };\n  }\n};\n\n// Local storage functions for user actions\nexport const applyForJob = async (jobId: string, userId: string, data: any = {}): Promise<JobApplication> => {\n  const application: JobApplication = {\n    id: Date.now(),\n    jobId: parseInt(jobId),\n    userId: parseInt(userId),\n    status: 'pending',\n    appliedAt: new Date().toISOString(),\n    resume: data.resume,\n    coverLetter: data.coverLetter,\n  };\n  \n  saveApplication(application);\n  return application;\n};\n\nexport const getJobApplications = async (userId: string): Promise<JobApplication[]> => {\n  return getApplications().filter(app => app.userId.toString() === userId);\n};\n\nexport const saveJobForLater = async (jobId: string): Promise<void> => {\n  saveJob(jobId);\n};\n\nexport const unsaveJobFromLater = async (jobId: string): Promise<void> => {\n  unsaveJob(jobId);\n};\n\nexport const getSavedJobsForUser = async (userId: string): Promise<Job[]> => {\n  const savedJobIds = getSavedJobs();\n  const savedJobs: Job[] = [];\n  \n  // Fetch each saved job\n  for (const jobId of savedJobIds) {\n    const job = await getJobById(jobId);\n    if (job) {\n      savedJobs.push(job);\n    }\n  }\n  \n  return savedJobs;\n};\n\n// Export a named JobServiceClass for consistency\nexport class JobServiceClass {\n  static async getBaseURL(): Promise<string> {\n    return await getApiUrl();\n  }\n\n  static async getJobs(page = 1, perPage = 10, filters?: any): Promise<Job[]> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const searchParams = new URLSearchParams();\n      searchParams.append('page', page.toString());\n      searchParams.append('per_page', perPage.toString());\n      \n      if (filters) {\n        if (filters.location) searchParams.append('location', filters.location);\n        if (filters.company) searchParams.append('company', filters.company);\n        if (filters.search) searchParams.append('search', filters.search);\n      }\n\n      const response = await fetch(`${API_BASE_URL}/jobs/?${searchParams}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      // Null safety check\n      if (!data) {\n        return [];\n      }\n      \n      return data.items || data.jobs || data;\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      throw error;\n    }\n  }\n\n  static async getJobById(id: string): Promise<Job | null> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching job:', error);\n      throw error;\n    }\n  }\n\n  static async getSimilarJobs(jobId: string): Promise<Job[]> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/similar`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch similar jobs');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching similar jobs:', error);\n      return [];\n    }\n  }\n\n  static async searchJobs(query: string, params?: any): Promise<{ jobs: Job[]; total: number }> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      \n      // Handle empty query\n      if (!query || query.trim() === '') {\n        return { jobs: [], total: 0 };\n      }\n      \n      const searchParams = new URLSearchParams();\n      searchParams.append('q', query);\n      \n      if (params?.page) searchParams.append('page', params.page.toString());\n      if (params?.per_page) searchParams.append('per_page', params.per_page.toString());\n\n      const response = await fetch(`${API_BASE_URL}/jobs/search?${searchParams}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      // Add null check for response\n      if (!response || !response.ok) {\n        throw new Error(`HTTP ${response?.status || 'unknown'}: ${response?.statusText || 'unknown error'}`);\n      }\n      \n      const data = await response.json();\n      return {\n        jobs: data.items || data.jobs || data,\n        total: data.total || data.length || 0\n      };\n    } catch (error) {\n      console.error('Error searching jobs:', error);\n      throw error;\n    }\n  }\n\n  static async getJobStatistics() {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/statistics`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch job statistics');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching job statistics:', error);\n      throw error;\n    }\n  }\n\n  static async getFeaturedJobs(): Promise<Job[]> {\n    const result = await getJobs({ limit: 3 });\n    return result.items || result.jobs || [];\n  }\n\n  static async getJobStats() {\n    return await getJobStatistics();\n  }\n\n  static async createJob(jobData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(jobData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error creating job:', error);\n      throw error;\n    }\n  }\n\n  static async updateJob(id: string, jobData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(jobData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error updating job:', error);\n      throw error;\n    }\n  }\n\n  static async deleteJob(id: string) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return response.ok;\n    } catch (error) {\n      console.error('Error deleting job:', error);\n      throw error;\n    }\n  }\n\n  static async applyToJob(jobId: string, applicationData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error applying to job:', error);\n      throw error;\n    }\n  }\n\n  static async getMyApplications() {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/applications`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching applications:', error);\n      throw error;\n    }\n  }\n\n  static async saveJob(userId: string, jobId: string): Promise<void> {\n    await saveJob(jobId);\n  }\n\n  static async unsaveJob(userId: string, jobId: string): Promise<void> {\n    await unsaveJob(jobId);\n  }\n\n  static async getJobApplications(userId: string): Promise<{ applications: any[], savedJobs: any[] }> {\n    return { \n      applications: await getJobApplications(userId),\n      savedJobs: await getSavedJobsForUser(userId)\n    };\n  }\n\n  // v2: Form Scraping Methods\n  static async scrapeJobApplicationForm(jobId: string, url: string): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/scrape-form`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify({ url })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to scrape form: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error scraping form:', error);\n      throw error;\n    }\n  }\n\n  static async submitScrapedFormApplication(jobId: string, applicationData: any): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply-scraped`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to submit application: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error submitting scraped application:', error);\n      throw error;\n    }\n  }\n\n  // v3: Automated Application Methods\n  static async submitAutomatedApplication(jobId: string, applicationData: any): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply-automated`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to submit automated application: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error submitting automated application:', error);\n      throw error;\n    }\n  }\n\n  // User Profile Methods\n  static async getUserProfile(): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/users/profile`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get user profile: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  }\n\n  // Analytics and Tracking\n  static async trackJobInteraction(jobId: string, action: string): Promise<void> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      await fetch(`${API_BASE_URL}/jobs/${jobId}/track`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ action, timestamp: new Date().toISOString() })\n      });\n    } catch (error) {\n      console.error('Failed to track job interaction:', error);\n    }\n  }\n}\n\n// Export individual functions for compatibility\nexport const jobService = {\n  searchJobs: async (params: any) => {\n    const result = await getJobs(params);\n    return { jobs: result.items || result.jobs || [], total: result.total };\n  },\n  getJobs: async (page = 1, perPage = 10, filters?: any) => {\n    return await JobServiceClass.getJobs(page, perPage, filters);\n  },\n  getJobById: async (id: string) => {\n    return await JobServiceClass.getJobById(id);\n  },\n  getSimilarJobs: async (jobId: string) => {\n    return await JobServiceClass.getSimilarJobs(jobId);\n  },\n  getFeaturedJobs: async () => {\n    return await JobServiceClass.getFeaturedJobs();\n  },\n  getJobStats: async () => {\n    return await JobServiceClass.getJobStats();\n  },\n  getJobStatistics: async () => {\n    return await JobServiceClass.getJobStatistics();\n  },\n  applyToJob: async (jobId: string, applicationData: any) => {\n    return await JobServiceClass.applyToJob(jobId, applicationData);\n  },\n  createJob: async (jobData: any) => {\n    return await JobServiceClass.createJob(jobData);\n  },\n  updateJob: async (id: string, jobData: any) => {\n    return await JobServiceClass.updateJob(id, jobData);\n  },\n  deleteJob: async (id: string) => {\n    return await JobServiceClass.deleteJob(id);\n  },\n  getUserProfile: JobServiceClass.getUserProfile,\n  scrapeJobApplicationForm: JobServiceClass.scrapeJobApplicationForm,\n  submitScrapedFormApplication: JobServiceClass.submitScrapedFormApplication,\n  submitAutomatedApplication: JobServiceClass.submitAutomatedApplication,\n  getMyApplications: JobServiceClass.getMyApplications,\n  trackJobInteraction: JobServiceClass.trackJobInteraction\n};\n\nexport default JobServiceClass; ","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthModal from '../components/AuthModal';\nimport Onboarding from '../components/Onboarding';\nimport MultiJobAutocomplete from '../components/MultiJobAutocomplete';\nimport { jobService } from '../services/jobService';\nimport { Job } from '../types/job';\n\n// Icons temporarily replaced with text\nconst Search = () => <span>🔍</span>;\nconst MapPin = () => <span>📍</span>;\nconst Building = () => <span>🏢</span>;\nconst Globe = () => <span>🌍</span>;\nconst ArrowRight = () => <span>→</span>;\nconst Star = () => <span>⭐</span>;\nconst CheckCircle = () => <span>✅</span>;\nconst Bug = () => <span>🐛</span>;\nconst DollarSign = () => <span>💲</span>;\n\ninterface Position {\n  title: string;\n  count: number;\n  category?: string;\n}\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate();\n  const [selectedPositions, setSelectedPositions] = useState<Position[]>([]);\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\n  const [authModalTab, setAuthModalTab] = useState<'login' | 'register'>('login');\n  const [featuredJobs, setFeaturedJobs] = useState<Job[]>([]);\n  const [isOnboardingOpen, setIsOnboardingOpen] = useState(false);\n\n  // Check if user needs onboarding\n  useEffect(() => {\n    const onboardingCompleted = localStorage.getItem('onboardingCompleted');\n    const userToken = localStorage.getItem('userToken'); // Assuming you store auth token\n    \n    // Show onboarding for new users who just registered\n    if (userToken && !onboardingCompleted) {\n      setIsOnboardingOpen(true);\n    }\n  }, []);\n\n  // Fetch featured jobs on component mount\n  useEffect(() => {\n    const loadFeaturedJobs = async () => {\n      try {\n        console.log('🔥 Loading Hot Remote Jobs from API...');\n        const response = await jobService.getJobs(1, 6); // İlk 6 job'u al\n        console.log('API Response:', response);\n        \n        // API'den gelen verileri kontrol et\n        const jobs = (response as any)?.jobs || (response as any)?.items || response || [];\n        if (jobs && jobs.length > 0) {\n          // Real API'den gelen job'ları kullan\n          const formattedJobs = jobs.map((job: any) => ({\n            _id: job._id || job.id,\n            title: job.title,\n            company: job.company || 'Unknown Company',\n            location: job.location || 'Remote',\n            job_type: job.job_type || job.employment_type || 'Full-time',\n            salary_range: job.salary || job.salary_range || 'Competitive',\n            skills: job.skills || (job.title ? job.title.split(' ').slice(0, 3) : ['Remote']),\n            created_at: job.created_at || job.posted_date || new Date().toISOString(),\n            description: job.description || 'Exciting remote opportunity',\n            company_logo: job.company_logo || (typeof job.company === 'string' ? job.company[0]?.toUpperCase() : '🏢'),\n            url: job.url || job.external_url || '#',\n            is_active: job.is_active !== false\n          }));\n          \n          setFeaturedJobs(formattedJobs.slice(0, 3)); // İlk 3'ünü göster\n          console.log('✅ Hot Remote Jobs loaded successfully:', formattedJobs.length);\n        } else {\n          console.warn('⚠️ No jobs returned from API, using fallback data');\n          throw new Error('No jobs from API');\n        }\n      } catch (error) {\n        console.error('❌ Error loading featured jobs from API:', error);\n        // Fallback to static data if API fails\n        setFeaturedJobs([\n          {\n            _id: '1',\n            title: 'Senior Frontend Developer',\n            company: 'TechBuzz Ltd.',\n            location: 'Remote (Global)',\n            job_type: 'Full-time',\n            salary_range: '$90k - $130k',\n            skills: ['React', 'Next.js', 'Remote'],\n            created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Join our team as a Senior Frontend Developer working on cutting-edge web applications.',\n            company_logo: '💻',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '2',\n            title: 'AI Product Manager',\n            company: 'FutureAI Corp.',\n            location: 'Remote (US)',\n            job_type: 'Full-time',\n            salary_range: '$120k - $170k',\n            skills: ['AI', 'Product', 'Remote'],\n            created_at: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),\n            description: 'Lead AI product development and strategy for innovative machine learning solutions.',\n            company_logo: '🧠',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '3',\n            title: 'Lead DevOps Engineer',\n            company: 'CloudHive Inc.',\n            location: 'Hybrid (Berlin, DE)',\n            job_type: 'Contract',\n            salary_range: '$100k - $150k',\n            skills: ['AWS', 'Kubernetes', 'CI/CD'],\n            created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Architect and maintain cloud infrastructure for high-scale applications.',\n            company_logo: '☁️',\n            url: '#',\n            is_active: true\n          }\n        ] as Job[]);\n        console.log('📋 Using fallback job data');\n      }\n    };\n\n    loadFeaturedJobs();\n  }, []);\n\n  // Handle search with multiple positions\n  const handleMultiPositionSearch = (positions: Position[]) => {\n    if (positions.length === 0) {\n      alert('Please select at least one position to search.');\n      return;\n    }\n\n    const searchParams = new URLSearchParams();\n    searchParams.set('multi_search', 'true');\n    searchParams.set('job_titles', positions.map(p => p.title).join(','));\n    \n    navigate(`/jobs/search?${searchParams.toString()}`);\n  };\n\n  const handleGetStartedClick = () => {\n    setAuthModalTab('register');\n    setIsAuthModalOpen(true);\n  };\n\n  const handleSignUpWithGoogleClick = () => {\n    setAuthModalTab('register');\n    setIsAuthModalOpen(true);\n  };\n\n  const handleOnboardingComplete = () => {\n    setIsOnboardingOpen(false);\n    // Optionally redirect to jobs page or show success message\n    navigate('/jobs');\n  };\n\n  // Helper function to format time ago\n  const getTimeAgo = (dateString: string) => {\n    const now = new Date();\n    const posted = new Date(dateString);\n    const diffMs = now.getTime() - posted.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n    return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50\">\n      {/* Header */}\n      <header className=\"bg-white shadow-sm border-b sticky top-0 z-50\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex justify-between items-center h-16\">\n            <Link to=\"/\" className=\"flex items-center space-x-3\">\n              <div className=\"w-10 h-10 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center shadow-md\">\n                <div className=\"w-6 h-6 text-white flex items-center justify-center\">\n                  <Bug />\n                </div>\n              </div>\n              <div>\n                <h1 className=\"text-xl font-bold text-gray-900\">Buzz2Remote</h1>\n                <p className=\"text-xs text-gray-500\">Your Hive for Remote Opportunities</p>\n              </div>\n            </Link>\n            <nav className=\"hidden md:flex items-center space-x-8\">\n            </nav>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={handleGetStartedClick}\n                className=\"bg-gradient-to-r from-orange-500 to-yellow-400 text-white px-4 py-2 rounded-lg hover:from-orange-600 hover:to-yellow-500 transition-colors font-medium text-sm shadow-md\"\n              >\n                Get Started\n              </button>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <section className=\"py-16 md:py-20 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto text-center\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-gray-900 mb-6 leading-tight\">\n            Find Your Next <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-orange-500 to-yellow-500\">Remote Buzz</span>\n          </h1>\n          <p className=\"text-lg md:text-xl text-gray-600 mb-10 md:mb-12 max-w-3xl mx-auto\">\n            AI-powered job matching to connect you with global remote opportunities. Select multiple job titles and let our smart search find the perfect matches.\n          </p>\n\n          {/* Updated Search Section with MultiJobAutocomplete */}\n          <div className=\"max-w-3xl mx-auto\">\n            <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n              Find Your Perfect Remote Job\n            </h2>\n            \n            <MultiJobAutocomplete\n              selectedPositions={selectedPositions}\n              onPositionsChange={setSelectedPositions}\n              onSearch={handleMultiPositionSearch}\n              placeholder=\"Search job titles (e.g., Frontend Developer, Backend Engineer)\"\n              maxSelections={10}\n            />\n            \n            <p className=\"text-center text-gray-600 text-sm mt-4\">\n              Select up to 10 job positions to find the best matches for your skills\n            </p>\n          </div>\n        </div>\n      </section>\n      \n      {/* Featured Jobs */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-white\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Hot Remote Jobs 🔥</h2>\n            <p className=\"text-gray-600\">Fresh opportunities from leading remote companies</p>\n          </div>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-12\">\n            {featuredJobs.map((job) => (\n              <div key={job._id} className=\"bg-white border border-gray-200 rounded-xl p-6 hover:shadow-xl transition-shadow cursor-pointer flex flex-col justify-between\">\n                <div>\n                  <div className=\"flex items-start justify-between mb-4\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center text-2xl shadow-sm\">\n                        {job.company_logo || (typeof job.company === 'string' ? job.company[0] : job.company.name[0])}\n                      </div>\n                      <div>\n                        <h3 className=\"font-semibold text-gray-900 text-lg\">{job.title}</h3>\n                        <p className=\"text-gray-600 text-sm\">{typeof job.company === 'string' ? job.company : job.company.name}</p>\n                      </div>\n                    </div>\n                    <button \n                      onClick={() => {\n                        // Check if user is logged in for favoriting\n                        const userToken = localStorage.getItem('userToken');\n                        if (!userToken) {\n                          setAuthModalTab('login');\n                          setIsAuthModalOpen(true);\n                        } else {\n                          // Add to favorites logic here\n                          console.log('Adding job to favorites:', job._id);\n                        }\n                      }}\n                      className=\"p-1.5 rounded-full hover:bg-yellow-100 text-gray-400 hover:text-yellow-500 transition-colors\"\n                    >\n                       <div className=\"w-5 h-5 flex items-center justify-center\">\n                         <Star />\n                       </div>\n                    </button>\n                  </div>\n                      \n                  <div className=\"space-y-2 mb-4\">\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                        <MapPin />\n                      </div>\n                      {job.location}\n                    </div>\n                    <div className=\"flex items-center text-sm text-gray-600\">\n                      <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                        <Building />\n                      </div>\n                      {job.job_type}\n                    </div>\n                    {job.salary_range && (\n                      <div className=\"flex items-center text-sm text-gray-600\">\n                        <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                          <DollarSign />\n                        </div>\n                        {job.salary_range}\n                      </div>\n                    )}\n                  </div>\n\n                  <div className=\"flex flex-wrap gap-2 mb-6\">\n                    {(job.skills || []).slice(0, 3).map((tag, index) => (\n                      <span key={index} className=\"px-3 py-1 bg-orange-50 text-orange-600 text-xs font-medium rounded-full\">\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                  <span className=\"text-xs text-gray-500\">Posted: {getTimeAgo(job.created_at)}</span>\n                  <Link \n                    to={`/jobs/${job._id}`} \n                    className=\"text-orange-600 hover:text-orange-700 font-semibold text-sm flex items-center space-x-1 group\"\n                  >\n                    <span>View Details</span>\n                    <div className=\"w-4 h-4 transition-transform group-hover:translate-x-1 flex items-center justify-center\">\n                      <ArrowRight />\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"text-center\">\n            <Link\n              to=\"/jobs\"\n              className=\"inline-flex items-center space-x-2 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-8 py-3 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-semibold shadow-lg\"\n            >\n              <span>Browse All Jobs</span>\n              <div className=\"w-5 h-5 flex items-center justify-center\">\n                <ArrowRight />\n              </div>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section (Simplified) */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Why Buzz2Remote?</h2>\n            <p className=\"text-gray-600\">Your smart way to a successful remote career.</p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[{\n                icon: <div className=\"w-8 h-8 text-orange-500 flex items-center justify-center\"><Search /></div>,\n                title: \"AI-Powered Matching\",\n                description: \"Our AI finds perfect job matches for you.\"\n              },\n              {\n                icon: <div className=\"w-8 h-8 text-green-500 flex items-center justify-center\"><CheckCircle /></div>,\n                title: \"One-Click Apply\",\n                description: \"Apply to jobs instantly with your saved profile.\"\n              },\n              {\n                icon: <div className=\"w-8 h-8 text-blue-500 flex items-center justify-center\"><Globe /></div>,\n                title: \"Global Opportunities\",\n                description: \"Access thousands of remote jobs worldwide.\"\n              }\n            ].map(feature => (\n              <div key={feature.title} className=\"bg-white p-8 rounded-xl shadow-lg text-center\">\n                <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  {feature.icon}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{feature.title}</h3>\n                <p className=\"text-gray-600 text-sm\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-orange-500 to-yellow-500\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6\">\n            Ready to Buzz Your Way to a Remote Career?\n          </h2>\n          <p className=\"text-xl text-yellow-100 mb-10\">\n            Join Buzz2Remote today and let our AI find your next big opportunity.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button\n              onClick={handleGetStartedClick}\n              className=\"bg-white text-orange-600 px-10 py-3 rounded-lg hover:bg-yellow-50 transition-colors font-semibold shadow-lg text-lg\"\n            >\n              Create Free Account\n            </button>\n             <button\n                onClick={handleSignUpWithGoogleClick}\n                className=\"flex items-center justify-center space-x-2 bg-white text-orange-600 px-10 py-3 rounded-lg hover:bg-yellow-50 transition-colors font-semibold border border-orange-200 text-lg shadow-lg\"\n              >\n                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n                  <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                  <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                  <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                  <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                </svg>\n                <span>Sign up with Google</span>\n              </button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-900 text-white py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <Link to=\"/\" className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center shadow-md\">\n                  <div className=\"w-5 h-5 text-white flex items-center justify-center\">\n                    <Bug />\n                  </div>\n                </div>\n                <span className=\"text-xl font-bold\">Buzz2Remote</span>\n              </Link>\n              <p className=\"text-gray-400 text-sm mb-4\">\n                Your hive for global remote opportunities, powered by AI.\n              </p>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">For Job Seekers</h3>\n              <ul className=\"space-y-2 text-sm text-gray-400\">\n                <li><Link to=\"/profile\" className=\"hover:text-white\">My Profile</Link></li>\n                <li><Link to=\"/applications\" className=\"hover:text-white\">My Applications</Link></li>\n                <li><Link to=\"/help\" className=\"hover:text-white\">Help Center</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Company</h3>\n              <ul className=\"space-y-2 text-sm text-gray-400\">\n                <li><Link to=\"/pricing\" className=\"hover:text-white\">Pricing</Link></li>\n                <li><Link to=\"/terms\" className=\"hover:text-white\">Terms & Conditions</Link></li>\n                <li><Link to=\"/privacy\" className=\"hover:text-white\">Privacy Policy</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-bold mb-4\">For Employers</h4>\n              <ul className=\"space-y-2\">\n                <li><a href=\"/post-job\" className=\"text-gray-400 hover:text-white\">Post a Job</a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-500 text-sm\">\n            <p>&copy; {new Date().getFullYear()} Buzz2Remote. All rights reserved. AI Powered Remote Job Matching.</p>\n          </div>\n        </div>\n      </footer>\n\n      <AuthModal \n        isOpen={isAuthModalOpen} \n        onClose={() => setIsAuthModalOpen(false)} \n        defaultTab={authModalTab}\n      />\n\n      <Onboarding \n        isOpen={isOnboardingOpen} \n        onClose={() => setIsOnboardingOpen(false)}\n        onComplete={handleOnboardingComplete}\n      />\n    </div>\n  );\n};\n\nexport default Home; "],"names":["cachedApiUrl","apiUrlPromise","API_BASE_URL","process","clearApiUrlCache","console","log","getApiUrl","async","detectBackendPort","error","window","User","_jsx","children","Eye","EyeOff","X","Check","_ref","isOpen","onClose","defaultTab","navigate","useNavigate","activeTab","setActiveTab","useState","showPassword","setShowPassword","showTermsModal","setShowTermsModal","showPrivacyModal","setShowPrivacyModal","loginEmail","setLoginEmail","loginPassword","setLoginPassword","loginRememberMe","setLoginRememberMe","loginLoading","setLoginLoading","loginError","setLoginError","registerEmail","setRegisterEmail","registerFullName","setRegisterFullName","registerPassword","setRegisterPassword","agreedToTerms","setAgreedToTerms","registerLoading","setRegisterLoading","registerError","setRegisterError","registerSuccess","setRegisterSuccess","passwordRequirements","text","isValid","password","length","test","isPasswordValid","every","req","closeTermsModal","closePrivacyModal","TermsModal","className","_jsxs","onClick","PrivacyModal","_Fragment","concat","onSubmit","e","preventDefault","formData","FormData","append","response","fetch","method","body","ok","errorData","json","Error","detail","data","localStorage","setItem","access_token","location","reload","err","message","htmlFor","type","required","value","onChange","target","placeholder","id","checked","disabled","auth_url","href","viewBox","fill","d","headers","JSON","stringify","email","name","Array","isArray","errorMessage","map","msg","join","setTimeout","requirement","index","onComplete","currentStep","setCurrentStep","profile","setProfile","fullName","jobTitle","experience","skills","preferences","jobTypes","salaryRange","remoteOnly","notifications","skillOptions","jobTypeOptions","label","experienceOptions","salaryRanges","handleComplete","style","width","renderStep","Zap","Target","CheckCircle","Bell","prev","_objectSpread","MapPin","Briefcase","option","Star","skill","includes","filter","s","handleSkillToggle","handleJobTypeToggle","jobType","t","range","handlePrevious","ArrowLeft","_","i","handleNext","ArrowRight","Search","ChevronDown","Plus","Trash2","selectedPositions","onPositionsChange","onSearch","maxSelections","inputValue","setInputValue","positions","setPositions","isLoading","setIsLoading","setIsOpen","highlightedIndex","setHighlightedIndex","dropdownRef","useRef","inputRef","searchTimeoutRef","fetchPositions","useCallback","query","trim","apiUrl","encodeURIComponent","formattedPositions","job_titles","item","title","count","category","status","useEffect","current","clearTimeout","handlePositionSelect","position","find","p","toLowerCase","alert","newSelectedPositions","_inputRef$current","focus","handleClickOutside","event","contains","document","addEventListener","removeEventListener","availablePositions","pos","selected","ref","clearAllSelections","positionToRemove","removePosition","onKeyDown","key","onFocus","handleSearch","APPLICATIONS_KEY","SAVED_JOBS_KEY","getApplications","stored","getItem","parse","getSavedJobs","saveJob","jobId","savedJobs","push","unsaveJob","updated","getJobs","params","arguments","undefined","searchParams","URLSearchParams","page","toString","limit","company","sort_by","items","jobs","total","getJobById","getJobApplications","app","userId","getSavedJobsForUser","savedJobIds","job","JobServiceClass","getBaseURL","perPage","filters","search","statusText","getSimilarJobs","searchJobs","per_page","getJobStatistics","getFeaturedJobs","result","getJobStats","total_jobs","jobs_by_company","jobs_by_location","createJob","jobData","updateJob","deleteJob","applyToJob","applicationData","getMyApplications","applications","scrapeJobApplicationForm","url","submitScrapedFormApplication","submitAutomatedApplication","getUserProfile","trackJobInteraction","action","timestamp","Date","toISOString","jobService","Building","Globe","Bug","DollarSign","Home","setSelectedPositions","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","featuredJobs","setFeaturedJobs","isOnboardingOpen","setIsOnboardingOpen","onboardingCompleted","warn","formattedJobs","_job$company$","_id","job_type","employment_type","salary_range","salary","split","slice","created_at","posted_date","description","company_logo","toUpperCase","external_url","is_active","now","loadFeaturedJobs","handleGetStartedClick","getTimeAgo","dateString","posted","diffMs","getTime","diffHours","Math","floor","diffDays","Link","to","MultiJobAutocomplete","set","tag","icon","feature","handleSignUpWithGoogleClick","getFullYear","AuthModal","Onboarding","handleOnboardingComplete"],"sourceRoot":""}