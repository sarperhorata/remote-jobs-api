{"version":3,"file":"static/js/345.6705d7c1.chunk.js","mappings":"sJAeA,IAAIA,EAA8B,KAC9BC,EAAwC,KAGrC,MAAMC,EAAeC,4BAGfC,EAAmBA,KAC9BC,QAAQC,IAAI,uCACZN,EAAe,KACfC,EAAgB,MA2CLM,EAAYC,UAUvB,GATAH,QAAQC,IAAI,+CAAsCN,GAS9CA,EAEF,OADAK,QAAQC,IAAI,qCAA4BN,GACjCA,EAIT,GAAIC,EAEF,OADAI,QAAQC,IAAI,oDACLL,EAITI,QAAQC,IAAI,0CACZL,EA9DwBO,WACxBH,QAAQC,IAAI,mDAIVD,QAAQC,IAAI,qCAAiCH,6BACtCA,6BAwDOM,GAEhB,IAGE,OAFAT,QAAqBC,EACrBI,QAAQC,IAAI,yCAAqCN,GAC1CA,CACT,CAAE,MAAOU,GAIP,OAHAL,QAAQK,MAAM,mCAA+BA,GAC7CV,EAAe,wBACfK,QAAQC,IAAI,mCAA0BN,GAC/BA,CACT,CAAC,QACCC,EAAgB,IAClB,GAkCoB,qBAAXU,SACTN,QAAQC,IAAI,2DACZF,I,oGCvIF,MAoKA,EApKiCQ,KAC/B,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCP,EAAOU,IAAYH,EAAAA,EAAAA,UAAS,KAC5BI,EAASC,IAAcL,EAAAA,EAAAA,WAAS,GA8BvC,OAAII,GAEAE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sIAAqIC,UAClJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sDAAqDC,SAAA,EAClEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oFAAmFC,UAChGF,EAAAA,EAAAA,KAACI,EAAAA,GAAW,CAACH,UAAU,0BAEzBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDC,SAAC,0BAGtEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,uFAKlDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iGAAgGC,UAC7GC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2CAA0CC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,UAAAE,SAAQ,wCAA4BF,EAAAA,EAAAA,KAAA,SAAM,kCACZA,EAAAA,EAAAA,KAAA,SAAM,gEACDA,EAAAA,EAAAA,KAAA,SAAM,0CAK7CG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SAAC,wCAGrDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2GAA0GC,SACpHV,QAILW,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,UACEK,QAASA,IAAMN,GAAW,GAC1BE,UAAU,mKAAkKC,SAC7K,gCAIDF,EAAAA,EAAAA,KAAA,UACEK,QAASA,IAAMf,EAAS,UACxBW,UAAU,8GAA6GC,SACxH,gDAWXF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sIAAqIC,UAClJF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sDAAqDC,SAAA,EAElEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,EAC/BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sHAAqHC,UAClIF,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACL,UAAU,0BAElBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,wDAAuDC,SAAC,0BAGtEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,wFAMlDC,EAAAA,EAAAA,MAAA,QAAMI,SAtGOtB,UACnBuB,EAAEC,iBACFb,GAAW,GACXC,EAAS,IAET,IACE,MAAMa,QAAe1B,EAAAA,EAAAA,MACf2B,QAAiBC,MAAM,GAADC,OAAIH,EAAM,yBAAyB,CAC7DI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE1B,YAGzB,IAAKmB,EAASQ,GAAI,CAChB,MAAMC,QAAkBT,EAASU,OACjC,MAAM,IAAIC,MAAMF,EAAUG,QAAU,0DACtC,CAEAxB,GAAW,EACb,CAAE,MAAOZ,GACPU,EAASV,aAAiBmC,MAAQnC,EAAMqC,QAAU,0DACpD,CAAC,QACC5B,GAAW,EACb,GA6EoCK,UAAU,YAAWC,SAAA,CAChDf,IACCa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAAsEC,SAClFf,KAILgB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,SAAOC,UAAU,kEAAiEC,SAAC,kBAGnFF,EAAAA,EAAAA,KAAA,SACEyB,KAAK,QACLC,UAAQ,EACRC,MAAOnC,EACPoC,SAAWpB,GAAMf,EAASe,EAAEqB,OAAOF,OACnC1B,UAAU,uKACV6B,YAAY,iBACZC,SAAUpC,QAIdK,EAAAA,EAAAA,KAAA,UACEyB,KAAK,SACLM,SAAUpC,EACVM,UAAU,gNAA+MC,SAExNP,EAAU,qBAAoB,uDAKnCK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,MAAA,UACEE,QAASA,IAAMf,EAAS,UACxBW,UAAU,2HAA0HC,SAAA,EAEpIF,EAAAA,EAAAA,KAACgC,EAAAA,GAAS,CAAC/B,UAAU,iBAAiB,yCAM1CD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDC,UACtEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uDAAsDC,SAAC,gI","sources":["utils/apiConfig.ts","pages/ForgotPassword.tsx"],"sourcesContent":["// Dinamik API URL detection sistemi\n// Backend i√ßin 8xxx portlarƒ± (8001, 8000, 8002, vb.) kontrol eder\n// Frontend i√ßin 5xxx portlarƒ± ile √ßalƒ±≈üabilir\n\ninterface PortConfig {\n  backendPorts: number[];\n  frontendPorts: number[];\n}\n\nconst portConfig: PortConfig = {\n  backendPorts: [8001, 8000, 8002, 8003, 8004], // 8001'i ilk sƒ±raya aldƒ±m - stable port\n  frontendPorts: [3001, 3000, 5000, 5001, 5173], // Frontend i√ßin √∂ncelik sƒ±rasƒ±\n};\n\n// API URL cache - Global deƒüi≈ükenler\nlet cachedApiUrl: string | null = null;\nlet apiUrlPromise: Promise<string> | null = null;\n\n// Sync API Base URL - fallback for components that need immediate access\nexport const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001';\n\n// Cache temizleme fonksiyonu\nexport const clearApiUrlCache = () => {\n  console.log('üßπ Clearing API URL cache');\n  cachedApiUrl = null;\n  apiUrlPromise = null;\n};\n\n// Backend port detection\nconst detectBackendPort = async (): Promise<string> => {\n  console.log('üîç Starting backend port detection...');\n  \n  // Environment variable varsa onu kullan\n  if (process.env.REACT_APP_API_URL) {\n    console.log('‚úÖ Using environment variable:', process.env.REACT_APP_API_URL);\n    return process.env.REACT_APP_API_URL;\n  }\n\n  // Test environment check - force port 8000 for tests\n  if (process.env.NODE_ENV === 'test') {\n    console.log('üß™ Test mode - forcing port 8000');\n    return 'http://localhost:8000';\n  }\n\n  // Backend portlarƒ±nƒ± sƒ±rayla test et\n  for (const port of portConfig.backendPorts) {\n    try {\n      console.log(`üîç Testing backend on port ${port}...`);\n      const response = await fetch(`http://localhost:${port}/health`, {\n        method: 'GET',\n        signal: AbortSignal.timeout(2000), // 2 saniye timeout\n      });\n      \n      if (response.ok) {\n        console.log(`‚úÖ Backend detected on port ${port}`);\n        return `http://localhost:${port}`;\n      }\n    } catch (error: any) {\n      // Port ula≈üƒ±labilir deƒüil, bir sonrakini dene\n      console.log(`‚ùå Backend not found on port ${port}:`, error.message);\n    }\n  }\n\n  // Hi√ßbir port √ßalƒ±≈ümƒ±yorsa varsayƒ±lan port\n  console.warn('‚ö†Ô∏è No backend found, using default port 8001');\n  return 'http://localhost:8001';\n};\n\nexport const getApiUrl = async (): Promise<string> => {\n  console.log('üì° getApiUrl called, cachedApiUrl:', cachedApiUrl);\n  \n  // Test ortamƒ±nda her zaman cache'i temizle\n  if (process.env.NODE_ENV === 'test') {\n    console.log('üß™ Test mode - clearing cache for fresh detection');\n    clearApiUrlCache();\n  }\n  \n  // Cache varsa onu kullan\n  if (cachedApiUrl) {\n    console.log('üìã Using cached API URL:', cachedApiUrl);\n    return cachedApiUrl;\n  }\n\n  // Zaten bir detection √ßalƒ±≈üƒ±yorsa aynƒ± promise'i bekle\n  if (apiUrlPromise) {\n    console.log('‚è≥ Detection already in progress, waiting...');\n    return apiUrlPromise;\n  }\n\n  // Yeni detection ba≈ülat\n  console.log('üöÄ Starting new detection...');\n  apiUrlPromise = detectBackendPort();\n  \n  try {\n    cachedApiUrl = await apiUrlPromise;\n    console.log('‚úÖ Detection complete, cached URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } catch (error) {\n    console.error('‚ùå Backend detection failed:', error);\n    cachedApiUrl = 'http://localhost:8001'; // Fallback\n    console.log('üîÑ Using fallback URL:', cachedApiUrl);\n    return cachedApiUrl;\n  } finally {\n    apiUrlPromise = null; // Promise'i temizle\n  }\n};\n\n// Development/Production mode detection\nexport const isDevelopment = process.env.NODE_ENV === 'development';\nexport const isProduction = process.env.NODE_ENV === 'production';\nexport const isTest = process.env.NODE_ENV === 'test';\n\n// Current frontend port detection\nexport const getCurrentPort = (): number => {\n  if (typeof window === 'undefined') return 3000; // SSR or test environment\n  const port = parseInt(window.location.port);\n  return port || (window.location.protocol === 'https:' ? 443 : 80);\n};\n\n// Backend health check\nexport const checkBackendHealth = async (apiUrl?: string): Promise<boolean> => {\n  try {\n    const url = apiUrl || await getApiUrl();\n    const healthUrl = url.replace('/api', '/health');\n    \n    const response = await fetch(healthUrl, {\n      method: 'GET',\n      signal: AbortSignal.timeout(5000),\n    });\n    \n    return response.ok;\n  } catch (error) {\n    console.error('Backend health check failed:', error);\n    return false;\n  }\n};\n\n// Force cache temizleme - sadece gerekli durumlarda\nif (typeof window !== 'undefined' && process.env.NODE_ENV !== 'test') {\n  console.log('üîÑ Initial page load - clearing API URL cache');\n  clearApiUrlCache();\n}\n\n// Test ortamƒ±nda export edilen konfig√ºrasyon objesi\nconst apiConfig = {\n  getApiUrl,\n  clearApiUrlCache,\n  checkBackendHealth,\n  getCurrentPort,\n  isDevelopment,\n  isProduction,\n  isTest,\n};\n\nexport default apiConfig; ","import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Mail, ArrowLeft, CheckCircle } from '../components/icons/EmojiIcons';\nimport { getApiUrl } from '../utils/apiConfig';\n\nconst ForgotPassword: React.FC = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n\n    try {\n      const apiUrl = await getApiUrl();\n      const response = await fetch(`${apiUrl}/auth/forgot-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email }),\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.detail || '≈ûifre sƒ±fƒ±rlama ba≈üarƒ±sƒ±z');\n      }\n\n      setSuccess(true);\n    } catch (error) {\n      setError(error instanceof Error ? error.message : '≈ûifre sƒ±fƒ±rlama ba≈üarƒ±sƒ±z');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (success) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n        <div className=\"max-w-md w-full\">\n          <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8\">\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <CheckCircle className=\"w-8 h-8 text-white\" />\n              </div>\n              <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n                Email G√∂nderildi!\n              </h1>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                ≈ûifre sƒ±fƒ±rlama talimatlarƒ± email adresinize g√∂nderildi\n              </p>\n            </div>\n\n            <div className=\"bg-blue-50 dark:bg-blue-900/20 border border-blue-200 dark:border-blue-800 rounded-lg p-4 mb-6\">\n              <p className=\"text-blue-800 dark:text-blue-200 text-sm\">\n                <strong>üìß Sonraki Adƒ±mlar:</strong><br />\n                1. Email kutunuzu kontrol edin<br />\n                2. ≈ûifre sƒ±fƒ±rlama linkine tƒ±klayƒ±n<br />\n                3. Yeni ≈üifrenizi belirleyin\n              </p>\n            </div>\n\n            <div className=\"text-center mb-6\">\n              <p className=\"text-gray-700 dark:text-gray-300 mb-2\">\n                Link ≈üu adrese g√∂nderildi:\n              </p>\n              <p className=\"text-orange-600 dark:text-orange-400 font-medium bg-orange-50 dark:bg-orange-900/20 px-3 py-2 rounded-lg\">\n                {email}\n              </p>\n            </div>\n\n            <div className=\"space-y-3\">\n              <button\n                onClick={() => setSuccess(false)}\n                className=\"w-full bg-gray-200 dark:bg-gray-700 text-gray-700 dark:text-gray-300 py-3 px-4 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-600 transition-colors font-medium\"\n              >\n                Farklƒ± Email ile Dene\n              </button>\n\n              <button\n                onClick={() => navigate('/login')}\n                className=\"w-full text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 py-2 transition-colors\"\n              >\n                Giri≈ü Sayfasƒ±na D√∂n\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-orange-50 to-yellow-50 dark:from-gray-900 dark:to-gray-800 flex items-center justify-center p-4\">\n      <div className=\"max-w-md w-full\">\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8\">\n          {/* Header */}\n          <div className=\"text-center mb-8\">\n            <div className=\"w-16 h-16 bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n              <Mail className=\"w-8 h-8 text-white\" />\n            </div>\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\n              ≈ûifremi Unuttum\n            </h1>\n            <p className=\"text-gray-600 dark:text-gray-400\">\n              Email adresinizi girin, size ≈üifre sƒ±fƒ±rlama linki g√∂nderelim\n            </p>\n          </div>\n\n          {/* Form */}\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\n            {error && (\n              <div className=\"p-3 text-sm text-red-700 bg-red-100 border border-red-200 rounded-lg\">\n                {error}\n              </div>\n            )}\n\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                Email Adresi\n              </label>\n              <input\n                type=\"email\"\n                required\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                className=\"w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\n                placeholder=\"your@email.com\"\n                disabled={loading}\n              />\n            </div>\n\n            <button\n              type=\"submit\"\n              disabled={loading}\n              className=\"w-full bg-gradient-to-r from-orange-500 to-yellow-500 text-white py-3 px-4 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium disabled:opacity-50 disabled:cursor-not-allowed\"\n            >\n              {loading ? 'G√∂nderiliyor...' : '≈ûifre Sƒ±fƒ±rlama Linki G√∂nder'}\n            </button>\n          </form>\n\n          {/* Back to Login */}\n          <div className=\"mt-6 text-center\">\n            <button\n              onClick={() => navigate('/login')}\n              className=\"inline-flex items-center text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\n            >\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Giri≈ü Sayfasƒ±na D√∂n\n            </button>\n          </div>\n\n          {/* Footer Info */}\n          <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\n              Email gelmiyorsa spam klas√∂r√ºn√ºz√º kontrol edin. \n              Sorun devam ederse destek ile ileti≈üime ge√ßin.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword; "],"names":["cachedApiUrl","apiUrlPromise","API_BASE_URL","process","clearApiUrlCache","console","log","getApiUrl","async","detectBackendPort","error","window","ForgotPassword","navigate","useNavigate","email","setEmail","useState","loading","setLoading","setError","success","setSuccess","_jsx","className","children","_jsxs","CheckCircle","onClick","Mail","onSubmit","e","preventDefault","apiUrl","response","fetch","concat","method","headers","body","JSON","stringify","ok","errorData","json","Error","detail","message","type","required","value","onChange","target","placeholder","disabled","ArrowLeft"],"sourceRoot":""}