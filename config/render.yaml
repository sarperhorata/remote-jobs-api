services:
  # Backend API Service
  - type: web
    name: buzz2remote-api
    runtime: python
    rootDir: backend
    buildCommand: pip install -r ../config/requirements.txt
    startCommand: uvicorn main:app --host 0.0.0.0 --port $PORT
    plan: starter
    autoDeploy: true
    branch: main
    numInstances: 1
    healthCheckPath: /health
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: API_HOST
        value: 0.0.0.0
      - key: API_DEBUG
        value: false
      - key: API_RELOAD
        value: false
      - key: CORS_ORIGINS
        value: https://buzz2remote.netlify.app,https://buzz2remote.com
      - key: CORS_ALLOW_CREDENTIALS
        value: true
      # Database
      - key: MONGODB_URI
        sync: false
      - key: MONGODB_DB_NAME
        value: buzz2remote
      # Security
      - key: SESSION_SECRET_KEY
        generateValue: true
      - key: JWT_SECRET
        generateValue: true
      - key: JWT_ALGORITHM
        value: HS256
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: 30
      # External APIs
      - key: OPENAI_API_KEY
        sync: false
      # Telegram settings (DISABLED)
      - key: TELEGRAM_BOT_TOKEN
        sync: false
      - key: TELEGRAM_ENABLED
        value: false
      - key: TELEGRAM_CHAT_ID
        sync: false
      # Email settings (optional)
      - key: EMAIL_HOST
        sync: false
      - key: EMAIL_PORT
        sync: false
      - key: EMAIL_USER
        sync: false
      - key: EMAIL_PASSWORD
        sync: false
      - key: EMAIL_FROM
        sync: false
      # Admin Panel
      - key: ADMIN_USERNAME
        value: admin
      - key: ADMIN_PASSWORD
        sync: false
      # Stripe Configuration
      - key: STRIPE_SECRET_KEY
        sync: false
      - key: STRIPE_WEBHOOK_SECRET
        sync: false
      - key: STRIPE_PUBLISHABLE_KEY
        sync: false
      # Dependabot Configuration
      - key: DEPENDABOT_ENABLED
        value: true
      - key: AUTO_MERGE_ENABLED
        value: true
      - key: SECURITY_UPDATES_ONLY
        value: true
    disk:
      name: tmp
      mountPath: /tmp
      sizeGB: 1

  # Dependabot Auto-Merge Service (Cron Job)
  - type: cron
    name: dependabot-auto-merge
    runtime: python
    rootDir: .
    buildCommand: |
      pip install -r backend/requirements.txt
      npm install --prefix frontend
    startCommand: python scripts/dependabot-monitor.py
    plan: starter
    schedule: "0 */6 * * *"  # Her 6 saatte bir çalış
    branch: main
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: NODE_VERSION
        value: 18
      - key: ENVIRONMENT
        value: production
      - key: GITHUB_TOKEN
        sync: false
      - key: GITHUB_REPO
        value: sarperhorata/buzz2remote
      - key: DEPENDABOT_ENABLED
        value: true
      - key: AUTO_MERGE_ENABLED
        value: true
      - key: SECURITY_UPDATES_ONLY
        value: true
      - key: TELEGRAM_ENABLED
        value: false

  # Dependency Security Monitor (Cron Job)
  - type: cron
    name: dependency-security-monitor
    runtime: python
    rootDir: .
    buildCommand: |
      pip install -r backend/requirements.txt
      npm install --prefix frontend
    startCommand: python scripts/security-monitor.py
    plan: starter
    schedule: "0 2 * * *"  # Her gün saat 02:00'de çalış
    branch: main
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: NODE_VERSION
        value: 18
      - key: ENVIRONMENT
        value: production
      - key: GITHUB_TOKEN
        sync: false
      - key: TELEGRAM_ENABLED
        value: false

  # External API Crawler (Cron Job)
  - type: cron
    name: external-api-crawler
    runtime: python
    rootDir: .
    buildCommand: pip install -r backend/requirements.txt
    startCommand: python scripts/cron/cron_external_apis.py
    plan: starter
    schedule: "0 9 * * *"  # Her gün saat 09:00'da çalış
    branch: main
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: MONGODB_URI
        sync: false
      - key: TELEGRAM_ENABLED
        value: false

  # Database Cleanup (Cron Job)
  - type: cron
    name: database-cleanup
    runtime: python
    rootDir: .
    buildCommand: pip install -r backend/requirements.txt
    startCommand: python scripts/cron/cron_database_cleanup.py
    plan: starter
    schedule: "0 2 * * 0"  # Her Pazar saat 02:00'de çalış
    branch: main
    envVars:
      - key: PYTHON_VERSION
        value: 3.11.0
      - key: ENVIRONMENT
        value: production
      - key: MONGODB_URI
        sync: false
      - key: TELEGRAM_ENABLED
        value: false

# Add these environment variables manually in Render dashboard:
# MONGODB_URI=mongodb+srv://your-mongodb-connection-string
# TELEGRAM_BOT_TOKEN=your-telegram-bot-token (DISABLED)
# TELEGRAM_CHAT_ID=your-telegram-chat-id (DISABLED)
# OPENAI_API_KEY=your-openai-api-key
# ADMIN_PASSWORD=your-secure-admin-password
# EMAIL_HOST=smtp.gmail.com (optional)
# EMAIL_PORT=587 (optional)
# EMAIL_USER=your-email@gmail.com (optional)
# EMAIL_PASSWORD=your-app-password (optional)
# EMAIL_FROM=your-email@gmail.com (optional)
# STRIPE_SECRET_KEY=your-stripe-secret-key
# STRIPE_WEBHOOK_SECRET=your-stripe-webhook-secret
# STRIPE_PUBLISHABLE_KEY=your-stripe-publishable-key
# GITHUB_TOKEN=your-github-personal-access-token (for Dependabot) 