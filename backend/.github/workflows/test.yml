name: Backend Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('backend/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
    
    - name: Install dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio pytest-timeout mongomock-motor
    
    - name: Run tests with coverage
      env:
        ENVIRONMENT: test
        TESTING: true
        PYTEST_CURRENT_TEST: true
        DISABLE_EXTERNAL_APIS: true
      run: |
        cd backend
        python -m pytest tests/ --cov=. --cov-report=xml --cov-report=html --cov-fail-under=70 --timeout=30 --maxfail=10
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage.xml
        flags: backend
        name: backend-coverage
    
    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          backend/coverage.xml
          backend/htmlcov/
          backend/.pytest_cache/
    
    - name: Test Summary
      if: always()
      run: |
        echo "## Test Results for Python ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- Tests completed successfully" >> $GITHUB_STEP_SUMMARY
        echo "- Coverage report generated" >> $GITHUB_STEP_SUMMARY