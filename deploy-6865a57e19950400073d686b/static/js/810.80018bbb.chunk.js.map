{"version":3,"file":"static/js/810.80018bbb.chunk.js","mappings":"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","sources":["pages/Applications.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { API_URL } from '../config';\nimport { formatDistanceToNow } from 'date-fns';\nimport { tr } from 'date-fns/locale';\n\ninterface Application {\n  _id: string;\n  job: {\n    _id: string;\n    title: string;\n    company: string;\n    location: string;\n    type: string;\n  };\n  status: 'pending' | 'reviewed' | 'accepted' | 'rejected';\n  appliedAt: string;\n  updatedAt: string;\n  notes?: string;\n}\n\nconst Applications: React.FC = () => {\n  const { user } = useAuth();\n  const [filter, setFilter] = useState<string>('all');\n  const [applications, setApplications] = useState<Application[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchApplications = async () => {\n      if (!user) return;\n      \n      try {\n        setIsLoading(true);\n        const response = await fetch(`${API_URL}/applications`, {\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        if (!response.ok) throw new Error('Failed to fetch applications');\n        const data = await response.json();\n        setApplications(data);\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'An error occurred');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchApplications();\n    \n    // Refetch every 30 seconds\n    const interval = setInterval(fetchApplications, 30000);\n    return () => clearInterval(interval);\n  }, [user]);\n\n  const filteredApplications = applications?.filter(app => {\n    if (filter === 'all') return true;\n    return app.status === filter;\n  });\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'pending': return 'bg-yellow-100 text-yellow-800';\n      case 'reviewed': return 'bg-blue-100 text-blue-800';\n      case 'accepted': return 'bg-green-100 text-green-800';\n      case 'rejected': return 'bg-red-100 text-red-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const getStatusText = (status: string) => {\n    switch (status) {\n      case 'pending': return 'İnceleniyor';\n      case 'reviewed': return 'İncelendi';\n      case 'accepted': return 'Kabul Edildi';\n      case 'rejected': return 'Reddedildi';\n      default: return status;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center\">\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-indigo-600 mx-auto\"></div>\n            <p className=\"mt-4 text-gray-600\">Başvurularınız yükleniyor...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center\">\n            <div className=\"text-red-600\">\n              <svg className=\"h-12 w-12 mx-auto\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\n              </svg>\n            </div>\n            <h3 className=\"mt-2 text-lg font-medium text-gray-900\">Bir hata oluştu</h3>\n            <p className=\"mt-1 text-sm text-gray-500\">Başvurularınız yüklenirken bir sorun oluştu. Lütfen daha sonra tekrar deneyin.</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"md:flex md:items-center md:justify-between\">\n          <div className=\"flex-1 min-w-0\">\n            <h2 className=\"text-2xl font-bold leading-7 text-gray-900 sm:text-3xl sm:truncate\">\n              Başvurularım\n            </h2>\n          </div>\n        </div>\n\n        {/* Filtreler */}\n        <div className=\"mt-6 flex space-x-4\">\n          <button\n            onClick={() => setFilter('all')}\n            className={`px-4 py-2 rounded-md text-sm font-medium ${\n              filter === 'all'\n                ? 'bg-indigo-600 text-white'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            Tümü\n          </button>\n          <button\n            onClick={() => setFilter('pending')}\n            className={`px-4 py-2 rounded-md text-sm font-medium ${\n              filter === 'pending'\n                ? 'bg-yellow-600 text-white'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            İnceleniyor\n          </button>\n          <button\n            onClick={() => setFilter('reviewed')}\n            className={`px-4 py-2 rounded-md text-sm font-medium ${\n              filter === 'reviewed'\n                ? 'bg-blue-600 text-white'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            İncelendi\n          </button>\n          <button\n            onClick={() => setFilter('accepted')}\n            className={`px-4 py-2 rounded-md text-sm font-medium ${\n              filter === 'accepted'\n                ? 'bg-green-600 text-white'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            Kabul Edildi\n          </button>\n          <button\n            onClick={() => setFilter('rejected')}\n            className={`px-4 py-2 rounded-md text-sm font-medium ${\n              filter === 'rejected'\n                ? 'bg-red-600 text-white'\n                : 'bg-white text-gray-700 hover:bg-gray-50'\n            }`}\n          >\n            Reddedildi\n          </button>\n        </div>\n\n        {/* Başvuru Listesi */}\n        <div className=\"mt-8 space-y-6\">\n          {filteredApplications?.length === 0 ? (\n            <div className=\"text-center py-12\">\n              <svg\n                className=\"mx-auto h-12 w-12 text-gray-400\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"\n                />\n              </svg>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">Başvuru bulunamadı</h3>\n              <p className=\"mt-1 text-sm text-gray-500\">\n                {filter === 'all'\n                  ? 'Henüz hiç başvuru yapmamışsınız.'\n                  : 'Bu kategoride başvuru bulunamadı.'}\n              </p>\n            </div>\n          ) : (\n            filteredApplications?.map((application) => (\n              <div\n                key={application._id}\n                className=\"bg-white shadow rounded-lg overflow-hidden hover:shadow-md transition-shadow duration-200\"\n              >\n                <div className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <h3 className=\"text-lg font-medium text-gray-900\">\n                        {application.job.title}\n                      </h3>\n                      <p className=\"mt-1 text-sm text-gray-500\">\n                        {application.job.company} • {application.job.location}\n                      </p>\n                    </div>\n                    <span\n                      className={`inline-flex items-center px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(\n                        application.status\n                      )}`}\n                    >\n                      {getStatusText(application.status)}\n                    </span>\n                  </div>\n                  <div className=\"mt-4 flex items-center justify-between text-sm text-gray-500\">\n                    <div>\n                      <p>\n                        Başvuru: {formatDistanceToNow(new Date(application.appliedAt), { addSuffix: true, locale: tr })}\n                      </p>\n                      <p className=\"mt-1\">\n                        Son Güncelleme: {formatDistanceToNow(new Date(application.updatedAt), { addSuffix: true, locale: tr })}\n                      </p>\n                    </div>\n                    <div className=\"flex space-x-4\">\n                      <a\n                        href={`/jobs/${application.job._id}`}\n                        className=\"text-indigo-600 hover:text-indigo-900\"\n                      >\n                        İlanı Görüntüle\n                      </a>\n                    </div>\n                  </div>\n                  {application.notes && (\n                    <div className=\"mt-4 p-4 bg-gray-50 rounded-md\">\n                      <p className=\"text-sm text-gray-700\">{application.notes}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Applications; "],"names":["Applications","user","useAuth","filter","setFilter","useState","applications","setApplications","isLoading","setIsLoading","error","setError","useEffect","fetchApplications","async","response","fetch","concat","API_URL","headers","localStorage","getItem","ok","Error","data","json","err","message","interval","setInterval","clearInterval","filteredApplications","app","status","getStatusColor","getStatusText","_jsx","className","children","_jsxs","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","onClick","length","map","application","job","title","company","location","formatDistanceToNow","Date","appliedAt","addSuffix","locale","tr","updatedAt","href","_id","notes"],"sourceRoot":""}