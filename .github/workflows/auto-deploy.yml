name: Auto Deploy on Success

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      run: npm run build

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
        
    services:
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        MONGODB_URL: mongodb://localhost:27017/test_db
        ENVIRONMENT: test
      run: python -m pytest tests/ -v --tb=short
    
    - name: Check API health
      env:
        MONGODB_URL: mongodb://localhost:27017/test_db
        ENVIRONMENT: test
      run: |
        python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/health || exit 1

  deploy-frontend:
    name: Deploy Frontend to Netlify
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Deploy to Netlify
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './frontend/build'
        production-branch: main
        github-token: ${{ secrets.GITHUB_TOKEN }}
        deploy-message: "Deploy from GitHub Actions"
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  deploy-backend:
    name: Deploy Backend to Render
    runs-on: ubuntu-latest
    needs: [test-frontend, test-backend]
    if: github.ref == 'refs/heads/main' && success()
    
    steps:
    - name: Deploy to Render
      run: |
        echo "üöÄ Deploying backend to Render..."
        if [ "${{ secrets.RENDER_DEPLOY_HOOK_URL }}" ]; then
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_URL }}"
          echo "‚úÖ Backend deployment triggered successfully"
        else
          echo "‚ùå RENDER_DEPLOY_HOOK_URL secret not set"
          exit 1
        fi

  notify-success:
    name: Notify Success
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: success()
    
    steps:
    - name: Success notification
      run: |
        echo "üéâ All tests passed and deployments successful!"
        echo "Frontend: Deployed to Netlify"
        echo "Backend: Deployed to Render" 