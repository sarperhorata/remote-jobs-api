{"version":3,"file":"static/js/1.f6d7bb46.chunk.js","mappings":"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","sources":["services/jobService.ts","components/Layout.tsx","components/Onboarding.tsx","components/QuickSearchButton.tsx","pages/Home.tsx"],"sourcesContent":["import { Job, JobApplication } from '../types/job';\nimport { getApiUrl } from '../utils/apiConfig';\n\n// Helper functions for local storage\nconst APPLICATIONS_KEY = 'applications';\nconst SAVED_JOBS_KEY = 'savedJobs';\n\nconst getApplications = (): JobApplication[] => {\n  const stored = localStorage.getItem(APPLICATIONS_KEY);\n  return stored ? JSON.parse(stored) : [];\n};\n\nconst saveApplication = (application: JobApplication) => {\n  const applications = getApplications();\n  applications.push(application);\n  localStorage.setItem(APPLICATIONS_KEY, JSON.stringify(applications));\n};\n\nconst getSavedJobs = (): string[] => {\n  const stored = localStorage.getItem(SAVED_JOBS_KEY);\n  return stored ? JSON.parse(stored) : [];\n};\n\nconst saveJob = (jobId: string) => {\n  const savedJobs = getSavedJobs();\n  if (!savedJobs.includes(jobId)) {\n    savedJobs.push(jobId);\n    localStorage.setItem(SAVED_JOBS_KEY, JSON.stringify(savedJobs));\n  }\n};\n\nconst unsaveJob = (jobId: string) => {\n  const savedJobs = getSavedJobs();\n  const updated = savedJobs.filter(id => id !== jobId);\n  localStorage.setItem(SAVED_JOBS_KEY, JSON.stringify(updated));\n};\n\n// Real API functions with dynamic URL detection\nexport const getJobs = async (params: any = {}): Promise<{ items?: Job[]; jobs?: Job[]; total: number; total_pages?: number; }> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const searchParams = new URLSearchParams();\n    \n    // Use page instead of skip for consistency with backend\n    if (params.page) searchParams.append('page', params.page.toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    if (params.company) searchParams.append('company', params.company);\n    if (params.location) searchParams.append('location', params.location);\n    if (params.sort_by) searchParams.append('sort_by', params.sort_by);\n    if (params.q) searchParams.append('q', params.q);\n    if (params.work_type) searchParams.append('work_type', params.work_type);\n    if (params.job_type) searchParams.append('job_type', params.job_type);\n    if (params.experience_level) searchParams.append('experience_level', params.experience_level);\n    if (params.posted_age) searchParams.append('posted_age', params.posted_age);\n    \n    const response = await fetch(`${API_BASE_URL}/jobs/search?${searchParams}`);\n    \n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n    \n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching jobs:', error);\n    // Return empty result on error\n    return { items: [], jobs: [], total: 0 };\n  }\n};\n\nexport const getJobById = async (id: string): Promise<Job | null> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/${id}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch job');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching job:', error);\n    return null;\n  }\n};\n\nexport const getSimilarJobs = async (jobId: string): Promise<Job[]> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/similar`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch similar jobs');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching similar jobs:', error);\n    return [];\n  }\n};\n\nexport const searchJobs = async (query: string, params: any = {}): Promise<Job[]> => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const searchParams = new URLSearchParams();\n    searchParams.append('query', query);\n    \n    if (params.skip) searchParams.append('skip', params.skip.toString());\n    if (params.limit) searchParams.append('limit', params.limit.toString());\n    \n    const response = await fetch(`${API_BASE_URL}/jobs/search/?${searchParams}`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to search jobs');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error searching jobs:', error);\n    return [];\n  }\n};\n\nexport const getJobStatistics = async () => {\n  try {\n    const API_BASE_URL = await getApiUrl();\n    const response = await fetch(`${API_BASE_URL}/jobs/statistics/`);\n    \n    if (!response.ok) {\n      throw new Error('Failed to fetch job statistics');\n    }\n    \n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching job statistics:', error);\n    return {\n      total_jobs: 0,\n      jobs_by_company: [],\n      jobs_by_location: []\n    };\n  }\n};\n\n// Local storage functions for user actions\nexport const applyForJob = async (jobId: string, userId: string, data: any = {}): Promise<JobApplication> => {\n  const application: JobApplication = {\n    id: Date.now(),\n    jobId: parseInt(jobId),\n    userId: parseInt(userId),\n    status: 'pending',\n    appliedAt: new Date().toISOString(),\n    resume: data.resume,\n    coverLetter: data.coverLetter,\n  };\n  \n  saveApplication(application);\n  return application;\n};\n\nexport const getJobApplications = async (userId: string): Promise<JobApplication[]> => {\n  return getApplications().filter(app => app.userId.toString() === userId);\n};\n\nexport const saveJobForLater = async (jobId: string): Promise<void> => {\n  saveJob(jobId);\n};\n\nexport const unsaveJobFromLater = async (jobId: string): Promise<void> => {\n  unsaveJob(jobId);\n};\n\nexport const getSavedJobsForUser = async (userId: string): Promise<Job[]> => {\n  const savedJobIds = getSavedJobs();\n  const savedJobs: Job[] = [];\n  \n  // Fetch each saved job\n  for (const jobId of savedJobIds) {\n    const job = await getJobById(jobId);\n    if (job) {\n      savedJobs.push(job);\n    }\n  }\n  \n  return savedJobs;\n};\n\n// Export a named JobServiceClass for consistency\nexport class JobServiceClass {\n  static async getBaseURL(): Promise<string> {\n    return await getApiUrl();\n  }\n\n  static async getJobs(page = 1, perPage = 10, filters?: any): Promise<Job[]> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const searchParams = new URLSearchParams();\n      searchParams.append('page', page.toString());\n      searchParams.append('limit', perPage.toString());\n      \n      if (filters) {\n        if (filters.location) searchParams.append('location', filters.location);\n        if (filters.company) searchParams.append('company', filters.company);\n        if (filters.search) searchParams.append('q', filters.search);\n      }\n\n      const response = await fetch(`${API_BASE_URL}/jobs/search?${searchParams}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      const data = await response.json();\n      \n      // Null safety check\n      if (!data) {\n        return [];\n      }\n      \n      return data.jobs || data.items || data;\n    } catch (error) {\n      console.error('Error fetching jobs:', error);\n      throw error;\n    }\n  }\n\n  static async getJobById(id: string): Promise<Job | null> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching job:', error);\n      throw error;\n    }\n  }\n\n  static async getSimilarJobs(jobId: string): Promise<Job[]> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/similar`);\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch similar jobs');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching similar jobs:', error);\n      return [];\n    }\n  }\n\n  static async searchJobs(query: string, params?: any): Promise<{ jobs: Job[]; total: number }> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      \n      // Handle empty query\n      if (!query || query.trim() === '') {\n        return { jobs: [], total: 0 };\n      }\n      \n      const searchParams = new URLSearchParams();\n      searchParams.append('q', query);\n      \n      if (params?.page) searchParams.append('page', params.page.toString());\n      if (params?.per_page) searchParams.append('per_page', params.per_page.toString());\n\n      const response = await fetch(`${API_BASE_URL}/jobs/search?${searchParams}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      // Add null check for response\n      if (!response || !response.ok) {\n        throw new Error(`HTTP ${response?.status || 'unknown'}: ${response?.statusText || 'unknown error'}`);\n      }\n      \n      const data = await response.json();\n      return {\n        jobs: data.items || data.jobs || data,\n        total: data.total || data.length || 0\n      };\n    } catch (error) {\n      console.error('Error searching jobs:', error);\n      throw error;\n    }\n  }\n\n  static async getJobStatistics() {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/statistics`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to fetch job statistics');\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching job statistics:', error);\n      throw error;\n    }\n  }\n\n  static async getFeaturedJobs(): Promise<Job[]> {\n    const result = await getJobs({ limit: 3 });\n    return result.items || result.jobs || [];\n  }\n\n  static async getJobStats() {\n    return await getJobStatistics();\n  }\n\n  static async createJob(jobData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(jobData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error creating job:', error);\n      throw error;\n    }\n  }\n\n  static async updateJob(id: string, jobData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(jobData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error updating job:', error);\n      throw error;\n    }\n  }\n\n  static async deleteJob(id: string) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${id}`, {\n        method: 'DELETE',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return response.ok;\n    } catch (error) {\n      console.error('Error deleting job:', error);\n      throw error;\n    }\n  }\n\n  static async applyToJob(jobId: string, applicationData: any) {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData),\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error applying to job:', error);\n      throw error;\n    }\n  }\n\n  static async getMyApplications() {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/applications`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching applications:', error);\n      throw error;\n    }\n  }\n\n  static async saveJob(userId: string, jobId: string): Promise<void> {\n    await saveJob(jobId);\n  }\n\n  static async unsaveJob(userId: string, jobId: string): Promise<void> {\n    await unsaveJob(jobId);\n  }\n\n  static async getJobApplications(userId: string): Promise<{ applications: any[], savedJobs: any[] }> {\n    return { \n      applications: await getJobApplications(userId),\n      savedJobs: await getSavedJobsForUser(userId)\n    };\n  }\n\n  // v2: Form Scraping Methods\n  static async scrapeJobApplicationForm(jobId: string, url: string): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/scrape-form`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify({ url })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to scrape form: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error scraping form:', error);\n      throw error;\n    }\n  }\n\n  static async submitScrapedFormApplication(jobId: string, applicationData: any): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply-scraped`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to submit application: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error submitting scraped application:', error);\n      throw error;\n    }\n  }\n\n  // v3: Automated Application Methods\n  static async submitAutomatedApplication(jobId: string, applicationData: any): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/${jobId}/apply-automated`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        },\n        body: JSON.stringify(applicationData)\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to submit automated application: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error submitting automated application:', error);\n      throw error;\n    }\n  }\n\n  // User Profile Methods\n  static async getUserProfile(): Promise<any> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/users/profile`, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('auth_token')}`\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to get user profile: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching user profile:', error);\n      throw error;\n    }\n  }\n\n  // Analytics and Tracking\n  static async trackJobInteraction(jobId: string, action: string): Promise<void> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      await fetch(`${API_BASE_URL}/jobs/${jobId}/track`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ action, timestamp: new Date().toISOString() })\n      });\n    } catch (error) {\n      console.error('Failed to track job interaction:', error);\n    }\n  }\n\n  // Autocomplete helper for home page\n  static async getJobTitleSuggestions(query: string, limit: number = 10): Promise<{ title: string; count: number; category: string }[]> {\n    try {\n      const API_BASE_URL = await getApiUrl();\n      const response = await fetch(`${API_BASE_URL}/jobs/job-titles/search?q=${encodeURIComponent(query)}&limit=${limit}`);\n      \n      if (!response.ok) {\n        throw new Error(`Failed to fetch job title suggestions: ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching job title suggestions:', error);\n      // Fallback data\n      return [\n        { title: 'Software Engineer', count: 1250, category: 'Technology' },\n        { title: 'Product Manager', count: 890, category: 'Management' },\n        { title: 'Frontend Developer', count: 670, category: 'Technology' },\n        { title: 'Data Scientist', count: 540, category: 'Technology' },\n        { title: 'UX Designer', count: 320, category: 'Design' }\n      ];\n    }\n  }\n}\n\n// Export individual functions for compatibility\nexport const jobService = {\n  searchJobs: async (params: any) => {\n    const result = await getJobs(params);\n    return { jobs: result.items || result.jobs || [], total: result.total };\n  },\n  getJobs: async (page = 1, perPage = 10, filters?: any) => {\n    return await JobServiceClass.getJobs(page, perPage, filters);\n  },\n  getJobById: async (id: string) => {\n    return await JobServiceClass.getJobById(id);\n  },\n  getSimilarJobs: async (jobId: string) => {\n    return await JobServiceClass.getSimilarJobs(jobId);\n  },\n  getFeaturedJobs: async () => {\n    return await JobServiceClass.getFeaturedJobs();\n  },\n  getJobStats: async () => {\n    return await JobServiceClass.getJobStats();\n  },\n  getJobStatistics: async () => {\n    return await JobServiceClass.getJobStatistics();\n  },\n  applyToJob: async (jobId: string, applicationData: any) => {\n    return await JobServiceClass.applyToJob(jobId, applicationData);\n  },\n  createJob: async (jobData: any) => {\n    return await JobServiceClass.createJob(jobData);\n  },\n  updateJob: async (id: string, jobData: any) => {\n    return await JobServiceClass.updateJob(id, jobData);\n  },\n  deleteJob: async (id: string) => {\n    return await JobServiceClass.deleteJob(id);\n  },\n  saveJob: async (jobId: string) => {\n    await saveJob(jobId);\n  },\n  unsaveJob: async (userId: string, jobId: string) => {\n    await unsaveJob(jobId);\n  },\n  getUserProfile: JobServiceClass.getUserProfile,\n  scrapeJobApplicationForm: JobServiceClass.scrapeJobApplicationForm,\n  submitScrapedFormApplication: JobServiceClass.submitScrapedFormApplication,\n  submitAutomatedApplication: JobServiceClass.submitAutomatedApplication,\n  getMyApplications: JobServiceClass.getMyApplications,\n  trackJobInteraction: JobServiceClass.trackJobInteraction,\n  getJobTitleSuggestions: JobServiceClass.getJobTitleSuggestions\n};\n\nexport default JobServiceClass; ","import React from 'react';\nimport Header from './Header';\n\ninterface LayoutProps {\n  children: React.ReactNode;\n}\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900\">\n      <Header />\n      {children}\n    </div>\n  );\n};\n\nexport default Layout; ","import React, { useState } from 'react';\nimport { User, \n  MapPin, \n  Briefcase, \n  Star, \n  CheckCircle, \n  ArrowRight, \n  ArrowLeft,\n  Bell,\n  Target,\n  Zap } from './icons/EmojiIcons';\n\ninterface OnboardingProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onComplete: () => void;\n}\n\ninterface UserProfile {\n  fullName: string;\n  email: string;\n  location: string;\n  jobTitle: string;\n  experience: string;\n  skills: string[];\n  preferences: {\n    jobTypes: string[];\n    salaryRange: string;\n    remoteOnly: boolean;\n    notifications: boolean;\n  };\n}\n\nconst Onboarding: React.FC<OnboardingProps> = ({ isOpen, onClose, onComplete }) => {\n  const [currentStep, setCurrentStep] = useState(1);\n  const [profile, setProfile] = useState<UserProfile>({\n    fullName: '',\n    email: '',\n    location: '',\n    jobTitle: '',\n    experience: '',\n    skills: [],\n    preferences: {\n      jobTypes: [],\n      salaryRange: '',\n      remoteOnly: true,\n      notifications: true\n    }\n  });\n\n  const totalSteps = 5;\n\n  const skillOptions = [\n    'React', 'Vue.js', 'Angular', 'Node.js', 'Python', 'Java', 'JavaScript', 'TypeScript',\n    'AWS', 'Docker', 'Kubernetes', 'MongoDB', 'PostgreSQL', 'GraphQL', 'REST APIs',\n    'Machine Learning', 'Data Science', 'UI/UX Design', 'Product Management', 'DevOps'\n  ];\n\n  const jobTypeOptions = [\n    { value: 'full-time', label: 'Full-time' },\n    { value: 'part-time', label: 'Part-time' },\n    { value: 'contract', label: 'Contract' },\n    { value: 'freelance', label: 'Freelance' }\n  ];\n\n  const experienceOptions = [\n    { value: 'entry', label: 'Entry Level (0-2 years)' },\n    { value: 'mid', label: 'Mid Level (2-5 years)' },\n    { value: 'senior', label: 'Senior Level (5+ years)' },\n    { value: 'lead', label: 'Lead/Principal' },\n    { value: 'executive', label: 'Executive' }\n  ];\n\n  const salaryRanges = [\n    { value: '0-50k', label: '$0 - $50k' },\n    { value: '50k-80k', label: '$50k - $80k' },\n    { value: '80k-120k', label: '$80k - $120k' },\n    { value: '120k-150k', label: '$120k - $150k' },\n    { value: '150k+', label: '$150k+' }\n  ];\n\n  const handleNext = () => {\n    if (currentStep < totalSteps) {\n      setCurrentStep(currentStep + 1);\n    } else {\n      handleComplete();\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentStep > 1) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleComplete = () => {\n    // Save profile data\n    localStorage.setItem('userProfile', JSON.stringify(profile));\n    localStorage.setItem('onboardingCompleted', 'true');\n    onComplete();\n  };\n\n  const handleSkillToggle = (skill: string) => {\n    setProfile(prev => ({\n      ...prev,\n      skills: prev.skills.includes(skill)\n        ? prev.skills.filter(s => s !== skill)\n        : [...prev.skills, skill]\n    }));\n  };\n\n  const handleJobTypeToggle = (jobType: string) => {\n    setProfile(prev => ({\n      ...prev,\n      preferences: {\n        ...prev.preferences,\n        jobTypes: prev.preferences.jobTypes.includes(jobType)\n          ? prev.preferences.jobTypes.filter(t => t !== jobType)\n          : [...prev.preferences.jobTypes, jobType]\n      }\n    }));\n  };\n\n  if (!isOpen) return null;\n\n  const renderStep = () => {\n    switch (currentStep) {\n      case 1:\n        return (\n          <div className=\"text-center\">\n            <div className=\"w-20 h-20 bg-gradient-to-r from-orange-500 to-yellow-500 rounded-full flex items-center justify-center mx-auto mb-6\">\n              <Zap className=\"w-10 h-10 text-white\" />\n            </div>\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Welcome to Buzz2Remote! 🎉</h2>\n            <p className=\"text-lg text-gray-600 mb-8 max-w-md mx-auto\">\n              Let's set up your profile to find the perfect remote opportunities tailored just for you.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <Target className=\"w-6 h-6 text-blue-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">AI-Powered Matching</h3>\n                <p className=\"text-sm text-gray-600\">Get personalized job recommendations</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <CheckCircle className=\"w-6 h-6 text-green-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">One-Click Apply</h3>\n                <p className=\"text-sm text-gray-600\">Apply instantly with your saved profile</p>\n              </div>\n              <div className=\"text-center\">\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center mx-auto mb-3\">\n                  <Bell className=\"w-6 h-6 text-purple-600\" />\n                </div>\n                <h3 className=\"font-semibold text-gray-900 mb-2\">Smart Alerts</h3>\n                <p className=\"text-sm text-gray-600\">Never miss your dream job</p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 2:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <User className=\"w-8 h-8 text-blue-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Tell us about yourself</h2>\n              <p className=\"text-gray-600\">Basic information to get started</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"fullName\" className=\"block text-sm font-medium text-gray-700 mb-2\">Full Name</label>\n                <input\n                  id=\"fullName\"\n                  type=\"text\"\n                  value={profile.fullName}\n                  onChange={(e) => setProfile(prev => ({ ...prev, fullName: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter your full name\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-2\">Email Address</label>\n                <input\n                  id=\"email\"\n                  type=\"email\"\n                  value={profile.email}\n                  onChange={(e) => setProfile(prev => ({ ...prev, email: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"Enter your email address\"\n                />\n              </div>\n              \n              <div>\n                <label htmlFor=\"location\" className=\"block text-sm font-medium text-gray-700 mb-2\">Location</label>\n                <div className=\"relative\">\n                  <MapPin className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5\" />\n                  <input\n                    id=\"location\"\n                    type=\"text\"\n                    value={profile.location}\n                    onChange={(e) => setProfile(prev => ({ ...prev, location: e.target.value }))}\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                    placeholder=\"e.g. San Francisco, CA or Remote\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 3:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Briefcase className=\"w-8 h-8 text-green-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Your professional background</h2>\n              <p className=\"text-gray-600\">Help us understand your experience level</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label htmlFor=\"jobTitle\" className=\"block text-sm font-medium text-gray-700 mb-2\">Current/Desired Job Title</label>\n                <input\n                  id=\"jobTitle\"\n                  type=\"text\"\n                  value={profile.jobTitle}\n                  onChange={(e) => setProfile(prev => ({ ...prev, jobTitle: e.target.value }))}\n                  className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n                  placeholder=\"e.g. Frontend Developer, Product Manager\"\n                />\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Experience Level</label>\n                <div className=\"grid grid-cols-1 gap-3\">\n                  {experienceOptions.map(option => (\n                    <label key={option.value} className=\"flex items-center cursor-pointer\">\n                      <input\n                        id={`experience-${option.value}`}\n                        type=\"radio\"\n                        name=\"experience\"\n                        value={option.value}\n                        checked={profile.experience === option.value}\n                        onChange={(e) => setProfile(prev => ({ ...prev, experience: e.target.value }))}\n                        className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-gray-700\">{option.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 4:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-purple-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Star className=\"w-8 h-8 text-purple-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Your skills & expertise</h2>\n              <p className=\"text-gray-600\">Select the skills you have experience with</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-4\">\n                  Skills (Select all that apply)\n                </label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                  {skillOptions.map(skill => (\n                    <button\n                      key={skill}\n                      onClick={() => handleSkillToggle(skill)}\n                      className={`px-4 py-2 rounded-lg border text-sm font-medium transition-colors ${\n                        profile.skills.includes(skill)\n                          ? 'bg-blue-600 text-white border-blue-600'\n                          : 'bg-white text-gray-700 border-gray-300 hover:border-blue-500'\n                      }`}\n                    >\n                      {skill}\n                    </button>\n                  ))}\n                </div>\n                <p className=\"text-sm text-gray-500 mt-3\">\n                  Selected: {profile.skills.length} skills\n                </p>\n              </div>\n            </div>\n          </div>\n        );\n\n      case 5:\n        return (\n          <div>\n            <div className=\"text-center mb-8\">\n              <div className=\"w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mx-auto mb-4\">\n                <Target className=\"w-8 h-8 text-orange-600\" />\n              </div>\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">Job preferences</h2>\n              <p className=\"text-gray-600\">Set your job search preferences</p>\n            </div>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Job Types</label>\n                <div className=\"grid grid-cols-2 gap-3\">\n                  {jobTypeOptions.map(option => (\n                    <button\n                      key={option.value}\n                      onClick={() => handleJobTypeToggle(option.value)}\n                      className={`px-4 py-3 rounded-lg border text-sm font-medium transition-colors ${\n                        profile.preferences.jobTypes.includes(option.value)\n                          ? 'bg-blue-600 text-white border-blue-600'\n                          : 'bg-white text-gray-700 border-gray-300 hover:border-blue-500'\n                      }`}\n                    >\n                      {option.label}\n                    </button>\n                  ))}\n                </div>\n              </div>\n              \n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Salary Range</label>\n                <div className=\"grid grid-cols-1 gap-2\">\n                  {salaryRanges.map(range => (\n                    <label key={range.value} className=\"flex items-center cursor-pointer\">\n                      <input\n                        id={`salary-${range.value}`}\n                        type=\"radio\"\n                        name=\"salaryRange\"\n                        value={range.value}\n                        checked={profile.preferences.salaryRange === range.value}\n                        onChange={(e) => setProfile(prev => ({\n                          ...prev,\n                          preferences: { ...prev.preferences, salaryRange: e.target.value }\n                        }))}\n                        className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                      />\n                      <span className=\"text-gray-700\">{range.label}</span>\n                    </label>\n                  ))}\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <label className=\"flex items-center cursor-pointer\">\n                  <input\n                    id=\"remoteOnly\"\n                    type=\"checkbox\"\n                    checked={profile.preferences.remoteOnly}\n                    onChange={(e) => setProfile(prev => ({\n                      ...prev,\n                      preferences: { ...prev.preferences, remoteOnly: e.target.checked }\n                    }))}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"text-gray-700\">Remote jobs only</span>\n                </label>\n                \n                <label className=\"flex items-center cursor-pointer\">\n                  <input\n                    id=\"notifications\"\n                    type=\"checkbox\"\n                    checked={profile.preferences.notifications}\n                    onChange={(e) => setProfile(prev => ({\n                      ...prev,\n                      preferences: { ...prev.preferences, notifications: e.target.checked }\n                    }))}\n                    className=\"mr-3 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <span className=\"text-gray-700\">Email notifications for new jobs</span>\n                </label>\n              </div>\n            </div>\n          </div>\n        );\n\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\n      <div className=\"bg-white rounded-2xl shadow-2xl w-full max-w-2xl max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"px-8 py-6 border-b border-gray-200\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-sm text-gray-500\">\n                Step {currentStep} of {totalSteps}\n              </div>\n            </div>\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 text-2xl\"\n            >\n              ×\n            </button>\n          </div>\n          \n          {/* Progress Bar */}\n          <div className=\"mt-4\">\n            <div className=\"w-full bg-gray-200 rounded-full h-2\">\n              <div\n                className=\"bg-gradient-to-r from-orange-500 to-yellow-500 h-2 rounded-full transition-all duration-300\"\n                style={{ width: `${(currentStep / totalSteps) * 100}%` }}\n              ></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Content */}\n        <div className=\"px-8 py-8\">\n          {renderStep()}\n        </div>\n\n        {/* Footer */}\n        <div className=\"px-8 py-6 border-t border-gray-200 flex items-center justify-between\">\n          <button\n            onClick={handlePrevious}\n            disabled={currentStep === 1}\n            className=\"flex items-center space-x-2 px-6 py-3 border border-gray-300 rounded-lg hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n          >\n            <ArrowLeft className=\"w-4 h-4\" />\n            <span>Previous</span>\n          </button>\n          \n          <div className=\"flex space-x-2\">\n            {[...Array(totalSteps)].map((_, i) => (\n              <div\n                key={i}\n                className={`w-2 h-2 rounded-full ${\n                  i + 1 <= currentStep ? 'bg-blue-600' : 'bg-gray-300'\n                }`}\n              />\n            ))}\n          </div>\n          \n          <button\n            onClick={handleNext}\n            className=\"flex items-center space-x-2 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-6 py-3 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-medium\"\n          >\n            <span>{currentStep === totalSteps ? 'Complete Setup' : 'Next'}</span>\n            <ArrowRight className=\"w-4 h-4\" />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Onboarding; ","import React from 'react';\n\ninterface QuickSearchButtonProps {\n  title: string;\n  onClick: () => void;\n}\n\nconst QuickSearchButton: React.FC<QuickSearchButtonProps> = ({ title, onClick }) => {\n  return (\n    <button\n      onClick={onClick}\n      className=\"px-4 py-2 bg-white dark:bg-slate-800 border border-gray-200 dark:border-slate-600 rounded-lg hover:bg-blue-50 dark:hover:bg-slate-700 hover:border-blue-300 dark:hover:border-blue-500 transition-colors duration-200 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-blue-600 dark:hover:text-blue-400\"\n    >\n      {title}\n    </button>\n  );\n};\n\nexport default QuickSearchButton; ","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport AuthModal from '../components/AuthModal';\nimport Onboarding from '../components/Onboarding';\nimport MultiJobAutocomplete from '../components/MultiJobAutocomplete';\nimport Layout from '../components/Layout';\nimport { jobService } from '../services/jobService';\nimport { Job } from '../types/job';\nimport QuickSearchButton from '../components/QuickSearchButton';\n\n// Icons temporarily replaced with text\nconst Search = () => <span>🔍</span>;\nconst MapPin = () => <span>📍</span>;\nconst Building = () => <span>🏢</span>;\nconst Globe = () => <span>🌍</span>;\nconst ArrowRight = () => <span>→</span>;\nconst Star = () => <span>⭐</span>;\nconst CheckCircle = () => <span>✅</span>;\nconst DollarSign = () => <span>💲</span>;\n\ninterface Position {\n  title: string;\n  count: number;\n  category?: string;\n}\n\nconst Home: React.FC = () => {\n  const navigate = useNavigate();\n  const [selectedPositions, setSelectedPositions] = useState<Position[]>([]);\n  const [isAuthModalOpen, setIsAuthModalOpen] = useState(false);\n  const [authModalTab, setAuthModalTab] = useState<'login' | 'register'>('login');\n  const [featuredJobs, setFeaturedJobs] = useState<Job[]>([]);\n  const [isOnboardingOpen, setIsOnboardingOpen] = useState(false);\n  const [popularPositions, setPopularPositions] = useState<string[]>([]);\n\n  // Check if user needs onboarding\n  useEffect(() => {\n    const onboardingCompleted = localStorage.getItem('onboardingCompleted');\n    const userToken = localStorage.getItem('userToken'); // Assuming you store auth token\n    \n    // Show onboarding for new users who just registered\n    if (userToken && !onboardingCompleted) {\n      setIsOnboardingOpen(true);\n    }\n  }, []);\n\n  // Fetch featured jobs on component mount\n  useEffect(() => {\n    const loadFeaturedJobs = async () => {\n      try {\n        console.log('🔥 Loading Hot Remote Jobs from API...');\n        const response = await jobService.getJobs(1, 10); // Get 10 jobs instead of 6\n        console.log('API Response:', response);\n        \n        // API'den gelen verileri kontrol et\n        const jobs = (response as any)?.jobs || (response as any)?.items || response || [];\n        if (jobs && jobs.length > 0) {\n          // Real API'den gelen job'ları kullan\n          const formattedJobs = jobs.map((job: any) => ({\n            _id: job._id || job.id,\n            title: job.title,\n            company: job.company || 'Unknown Company',\n            location: job.location || 'Remote',\n            job_type: job.job_type || job.employment_type || 'Full-time',\n            salary_range: job.salary || job.salary_range || 'Competitive',\n            skills: job.skills || (job.title ? job.title.split(' ').slice(0, 3) : ['Remote']),\n            created_at: job.created_at || job.posted_date || new Date().toISOString(),\n            description: job.description || 'Exciting remote opportunity',\n            company_logo: job.company_logo || (typeof job.company === 'string' ? job.company[0]?.toUpperCase() : '🏢'),\n            url: job.url || job.external_url || '#',\n            is_active: job.is_active !== false\n          }));\n          \n          setFeaturedJobs(formattedJobs); // Show all 10\n          console.log('✅ Hot Remote Jobs loaded successfully:', formattedJobs.length);\n        } else {\n          console.warn('⚠️ No jobs returned from API, using fallback data');\n          throw new Error('No jobs from API');\n        }\n      } catch (error) {\n        console.error('❌ Error loading featured jobs from API:', error);\n        // Fallback to static data if API fails - 10 jobs\n        setFeaturedJobs([\n          {\n            _id: '1',\n            title: 'Senior Frontend Developer',\n            company: 'TechBuzz Ltd.',\n            location: 'Remote (Global)',\n            job_type: 'Full-time',\n            salary_range: '$90k - $130k',\n            skills: ['React', 'Next.js', 'Remote'],\n            created_at: new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Join our team as a Senior Frontend Developer working on cutting-edge web applications.',\n            company_logo: '💻',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '2',\n            title: 'AI Product Manager',\n            company: 'FutureAI Corp.',\n            location: 'Remote (US)',\n            job_type: 'Full-time',\n            salary_range: '$120k - $170k',\n            skills: ['AI', 'Product', 'Remote'],\n            created_at: new Date(Date.now() - 3 * 60 * 60 * 1000).toISOString(),\n            description: 'Lead AI product development and strategy for innovative machine learning solutions.',\n            company_logo: '🧠',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '3',\n            title: 'Lead DevOps Engineer',\n            company: 'CloudHive Inc.',\n            location: 'Hybrid (Berlin, DE)',\n            job_type: 'Contract',\n            salary_range: '$100k - $150k',\n            skills: ['AWS', 'Kubernetes', 'CI/CD'],\n            created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Architect and maintain cloud infrastructure for high-scale applications.',\n            company_logo: '☁️',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '4',\n            title: 'UX/UI Designer',\n            company: 'DesignBee Studio',\n            location: 'Remote (Europe)',\n            job_type: 'Full-time',\n            salary_range: '$70k - $100k',\n            skills: ['Figma', 'Design Systems', 'Remote'],\n            created_at: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Create beautiful user experiences for our digital products.',\n            company_logo: '🎨',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '5',\n            title: 'Backend Engineer',\n            company: 'DataFlow Systems',\n            location: 'Remote (Worldwide)',\n            job_type: 'Full-time',\n            salary_range: '$85k - $125k',\n            skills: ['Python', 'Django', 'PostgreSQL'],\n            created_at: new Date(Date.now() - 12 * 60 * 60 * 1000).toISOString(),\n            description: 'Build scalable backend systems for data processing.',\n            company_logo: '🔧',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '6',\n            title: 'Marketing Manager',\n            company: 'GrowthBuzz Inc.',\n            location: 'Remote (US/EU)',\n            job_type: 'Full-time',\n            salary_range: '$80k - $110k',\n            skills: ['SEO', 'Content', 'Analytics'],\n            created_at: new Date(Date.now() - 4 * 24 * 60 * 60 * 1000).toISOString(),\n            description: 'Lead our marketing efforts to drive growth.',\n            company_logo: '📈',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '7',\n            title: 'Mobile Developer',\n            company: 'AppHive Ltd.',\n            location: 'Remote (Global)',\n            job_type: 'Contract',\n            salary_range: '$95k - $140k',\n            skills: ['React Native', 'iOS', 'Android'],\n            created_at: new Date(Date.now() - 6 * 60 * 60 * 1000).toISOString(),\n            description: 'Develop cross-platform mobile applications.',\n            company_logo: '📱',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '8',\n            title: 'Data Scientist',\n            company: 'InsightBee Analytics',\n            location: 'Remote (US)',\n            job_type: 'Full-time',\n            salary_range: '$110k - $160k',\n            skills: ['Python', 'ML', 'Statistics'],\n            created_at: new Date(Date.now() - 36 * 60 * 60 * 1000).toISOString(),\n            description: 'Turn data into actionable insights.',\n            company_logo: '📊',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '9',\n            title: 'Customer Success Manager',\n            company: 'SupportHive',\n            location: 'Remote (EU)',\n            job_type: 'Full-time',\n            salary_range: '$65k - $85k',\n            skills: ['CRM', 'Communication', 'SaaS'],\n            created_at: new Date(Date.now() - 8 * 60 * 60 * 1000).toISOString(),\n            description: 'Ensure customer satisfaction and retention.',\n            company_logo: '🤝',\n            url: '#',\n            is_active: true\n          },\n          {\n            _id: '10',\n            title: 'Blockchain Developer',\n            company: 'CryptoBee Tech',\n            location: 'Remote (Worldwide)',\n            job_type: 'Full-time',\n            salary_range: '$130k - $180k',\n            skills: ['Solidity', 'Web3', 'Smart Contracts'],\n            created_at: new Date(Date.now() - 16 * 60 * 60 * 1000).toISOString(),\n            description: 'Build the future of decentralized applications.',\n            company_logo: '⛓️',\n            url: '#',\n            is_active: true\n          }\n        ] as Job[]);\n        console.log('📋 Using fallback job data');\n      }\n    };\n\n    loadFeaturedJobs();\n  }, []);\n\n  const handleQuickSearch = (term: string) => {\n    navigate(`/search?q=${encodeURIComponent(term)}`);\n  };\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        // Popular search terms - fallback if API fails\n        const fallbackPositions = ['Software Engineer', 'Product Manager', 'Data Scientist', 'DevOps Engineer', 'UX Designer'];\n        \n        // Get popular job titles for quick search\n        const positionsResult = await jobService.getJobTitleSuggestions('', 5); // 5 popular positions\n        const positions = positionsResult.filter(pos => pos.title).map(pos => pos.title);\n        setPopularPositions(positions.length > 0 ? positions : fallbackPositions);\n      } catch (error) {\n        console.error('Error loading popular positions:', error);\n        // Use fallback positions if API fails\n        const fallbackPositions = ['Software Engineer', 'Product Manager', 'Data Scientist', 'DevOps Engineer', 'UX Designer'];\n        setPopularPositions(fallbackPositions);\n      }\n    };\n\n    loadData();\n  }, []); // Remove fallbackPositions dependency since it's defined inside useEffect\n\n  // Handle search with multiple positions\n  const handleMultiPositionSearch = (positions: Position[]) => {\n    if (positions.length === 0) {\n      alert('Please select at least one position to search.');\n      return;\n    }\n\n    const searchParams = new URLSearchParams();\n    searchParams.set('multi_search', 'true');\n    searchParams.set('job_titles', positions.map(p => p.title).join(','));\n    \n    navigate(`/jobs/search?${searchParams.toString()}`);\n  };\n\n  const handleGetStartedClick = () => {\n    setAuthModalTab('register');\n    setIsAuthModalOpen(true);\n  };\n\n  const handleSignUpWithGoogleClick = () => {\n    setAuthModalTab('register');\n    setIsAuthModalOpen(true);\n  };\n\n  const handleOnboardingComplete = () => {\n    setIsOnboardingOpen(false);\n    // Optionally redirect to jobs page or show success message\n    navigate('/jobs');\n  };\n\n  // Helper function to format time ago\n  const getTimeAgo = (dateString: string) => {\n    const now = new Date();\n    const posted = new Date(dateString);\n    const diffMs = now.getTime() - posted.getTime();\n    const diffHours = Math.floor(diffMs / (1000 * 60 * 60));\n    const diffDays = Math.floor(diffHours / 24);\n\n    if (diffHours < 1) return 'Just now';\n    if (diffHours < 24) return `${diffHours} hour${diffHours > 1 ? 's' : ''} ago`;\n    return `${diffDays} day${diffDays > 1 ? 's' : ''} ago`;\n  };\n\n  return (\n    <Layout>\n\n      <section className=\"py-16 md:py-20 px-4 sm:px-6 lg:px-8 relative\">\n        {/* Video Background */}\n        <div className=\"absolute inset-0 z-0 overflow-hidden\">\n          <video \n            autoPlay \n            loop \n            muted \n            playsInline\n            className=\"absolute inset-0 w-full h-full object-cover\"\n            poster=\"/path/to/poster-image.jpg\"\n          >\n            <source src=\"/Entry video.mp4\" type=\"video/mp4\" />\n            Your browser does not support the video tag.\n          </video>\n          <div className=\"absolute inset-0 bg-black/60\"></div>\n        </div>\n        \n        <div className=\"max-w-7xl mx-auto text-center relative z-20\">\n          <h1 className=\"text-4xl md:text-6xl font-bold text-white mb-6 leading-tight drop-shadow-lg\">\n            Find Your Next <span className=\"text-transparent bg-clip-text bg-gradient-to-r from-orange-400 to-yellow-400\">Remote Buzz</span>\n          </h1>\n          <p className=\"text-lg md:text-xl text-gray-200 mb-10 md:mb-12 max-w-3xl mx-auto drop-shadow-md\">\n            AI-powered job matching to connect you with global remote opportunities. Select multiple job titles and let our smart search find the perfect matches.\n          </p>\n\n          {/* Updated Search Section with MultiJobAutocomplete */}\n          <div className=\"max-w-3xl mx-auto relative\">\n            <h2 className=\"text-2xl font-bold text-white mb-6 text-center drop-shadow-md\">\n              Find Your Perfect Remote Job\n            </h2>\n            \n            <div className=\"relative\">\n              <MultiJobAutocomplete\n                selectedPositions={selectedPositions}\n                onPositionsChange={setSelectedPositions}\n                onSearch={handleMultiPositionSearch}\n                placeholder=\"Search job titles (e.g., Frontend Developer, Backend Engineer)\"\n                maxSelections={10}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n      \n      {/* Featured Jobs with Infinite Horizontal Scroll */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-white\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Hot Remote Jobs 🔥</h2>\n            <p className=\"text-gray-600\">Fresh opportunities from leading remote companies</p>\n          </div>\n          \n          {/* Infinite Horizontal Scrollable Container */}\n          <div className=\"relative\">\n            <div className=\"overflow-x-auto pb-4 -mx-4 px-4\">\n              <div className=\"flex gap-6 w-max animate-scroll-infinite\">\n                {/* First set of jobs */}\n                {featuredJobs.map((job) => (\n                  <div key={job._id} className=\"bg-white border border-gray-200 rounded-xl p-6 hover:shadow-xl transition-shadow cursor-pointer flex flex-col justify-between w-80 flex-shrink-0\">\n                    <div>\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center text-2xl shadow-sm\">\n                            {job.company_logo || (typeof job.company === 'string' ? job.company[0] : job.company.name[0])}\n                          </div>\n                          <div>\n                            <h3 className=\"font-semibold text-gray-900 text-lg line-clamp-1\">{job.title}</h3>\n                            <p className=\"text-gray-600 text-sm line-clamp-1\">{typeof job.company === 'string' ? job.company : job.company.name}</p>\n                          </div>\n                        </div>\n                        <button \n                          onClick={() => {\n                            const userToken = localStorage.getItem('userToken');\n                            if (!userToken) {\n                              setAuthModalTab('login');\n                              setIsAuthModalOpen(true);\n                            } else {\n                              console.log('Adding job to favorites:', job._id);\n                            }\n                          }}\n                          className=\"p-1.5 rounded-full hover:bg-yellow-100 text-gray-400 hover:text-yellow-500 transition-colors\"\n                        >\n                           <div className=\"w-5 h-5 flex items-center justify-center\">\n                             <Star />\n                           </div>\n                        </button>\n                      </div>\n                          \n                      <div className=\"space-y-2 mb-4\">\n                        <div className=\"flex items-center text-sm text-gray-600\">\n                          <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                            <MapPin />\n                          </div>\n                          <span className=\"line-clamp-1\">{job.location}</span>\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-600\">\n                          <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                            <Building />\n                          </div>\n                          {job.job_type}\n                        </div>\n                        {job.salary_range && (\n                          <div className=\"flex items-center text-sm text-gray-600\">\n                            <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                              <DollarSign />\n                            </div>\n                            {job.salary_range}\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"flex flex-wrap gap-2 mb-6\">\n                        {(job.skills || []).slice(0, 3).map((tag, index) => (\n                          <span key={index} className=\"px-3 py-1 bg-orange-50 text-orange-600 text-xs font-medium rounded-full\">\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                      <span className=\"text-xs text-gray-500\">Posted: {getTimeAgo(job.created_at)}</span>\n                      <Link \n                        to={`/jobs/${job._id}`} \n                        className=\"text-orange-600 hover:text-orange-700 font-semibold text-sm flex items-center space-x-1 group\"\n                      >\n                        <span>View Details</span>\n                        <div className=\"w-4 h-4 transition-transform group-hover:translate-x-1 flex items-center justify-center\">\n                          <ArrowRight />\n                        </div>\n                      </Link>\n                    </div>\n                  </div>\n                ))}\n                \n                {/* Duplicate set for infinite scroll effect */}\n                {featuredJobs.map((job) => (\n                  <div key={`duplicate-${job._id}`} className=\"bg-white border border-gray-200 rounded-xl p-6 hover:shadow-xl transition-shadow cursor-pointer flex flex-col justify-between w-80 flex-shrink-0\">\n                    <div>\n                      <div className=\"flex items-start justify-between mb-4\">\n                        <div className=\"flex items-center space-x-3\">\n                          <div className=\"w-12 h-12 bg-gray-100 rounded-lg flex items-center justify-center text-2xl shadow-sm\">\n                            {job.company_logo || (typeof job.company === 'string' ? job.company[0] : job.company.name[0])}\n                          </div>\n                          <div>\n                            <h3 className=\"font-semibold text-gray-900 text-lg line-clamp-1\">{job.title}</h3>\n                            <p className=\"text-gray-600 text-sm line-clamp-1\">{typeof job.company === 'string' ? job.company : job.company.name}</p>\n                          </div>\n                        </div>\n                        <button \n                          onClick={() => {\n                            const userToken = localStorage.getItem('userToken');\n                            if (!userToken) {\n                              setAuthModalTab('login');\n                              setIsAuthModalOpen(true);\n                            } else {\n                              console.log('Adding job to favorites:', job._id);\n                            }\n                          }}\n                          className=\"p-1.5 rounded-full hover:bg-yellow-100 text-gray-400 hover:text-yellow-500 transition-colors\"\n                        >\n                           <div className=\"w-5 h-5 flex items-center justify-center\">\n                             <Star />\n                           </div>\n                        </button>\n                      </div>\n                          \n                      <div className=\"space-y-2 mb-4\">\n                        <div className=\"flex items-center text-sm text-gray-600\">\n                          <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                            <MapPin />\n                          </div>\n                          <span className=\"line-clamp-1\">{job.location}</span>\n                        </div>\n                        <div className=\"flex items-center text-sm text-gray-600\">\n                          <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                            <Building />\n                          </div>\n                          {job.job_type}\n                        </div>\n                        {job.salary_range && (\n                          <div className=\"flex items-center text-sm text-gray-600\">\n                            <div className=\"w-4 h-4 mr-2 text-gray-400 flex items-center justify-center\">\n                              <DollarSign />\n                            </div>\n                            {job.salary_range}\n                          </div>\n                        )}\n                      </div>\n\n                      <div className=\"flex flex-wrap gap-2 mb-6\">\n                        {(job.skills || []).slice(0, 3).map((tag, index) => (\n                          <span key={index} className=\"px-3 py-1 bg-orange-50 text-orange-600 text-xs font-medium rounded-full\">\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center justify-between pt-4 border-t border-gray-100\">\n                      <span className=\"text-xs text-gray-500\">Posted: {getTimeAgo(job.created_at)}</span>\n                      <Link \n                        to={`/jobs/${job._id}`} \n                        className=\"text-orange-600 hover:text-orange-700 font-semibold text-sm flex items-center space-x-1 group\"\n                      >\n                        <span>View Details</span>\n                        <div className=\"w-4 h-4 transition-transform group-hover:translate-x-1 flex items-center justify-center\">\n                          <ArrowRight />\n                        </div>\n                      </Link>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"text-center mt-12\">\n            <Link\n              to=\"/jobs\"\n              className=\"inline-flex items-center space-x-2 bg-gradient-to-r from-orange-500 to-yellow-500 text-white px-8 py-3 rounded-lg hover:from-orange-600 hover:to-yellow-600 transition-colors font-semibold shadow-lg\"\n            >\n              <span>Browse All Jobs</span>\n              <div className=\"w-5 h-5 flex items-center justify-center\">\n                <ArrowRight />\n              </div>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Features Section (Simplified) */}\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-gray-900 mb-4\">Why Buzz2Remote?</h2>\n            <p className=\"text-gray-600\">Your smart way to a successful remote career.</p>\n          </div>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            {[{\n                icon: <div className=\"w-8 h-8 text-orange-500 flex items-center justify-center\"><Search /></div>,\n                title: \"AI-Powered Matching\",\n                description: \"Our AI finds perfect job matches for you.\"\n              },\n              {\n                icon: <div className=\"w-8 h-8 text-green-500 flex items-center justify-center\"><CheckCircle /></div>,\n                title: \"One-Click Apply\",\n                description: \"Apply to jobs instantly with your saved profile.\"\n              },\n              {\n                icon: <div className=\"w-8 h-8 text-blue-500 flex items-center justify-center\"><Globe /></div>,\n                title: \"Global Opportunities\",\n                description: \"Access thousands of remote jobs worldwide.\"\n              }\n            ].map(feature => (\n              <div key={feature.title} className=\"bg-white p-8 rounded-xl shadow-lg text-center\">\n                <div className=\"w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-6\">\n                  {feature.icon}\n                </div>\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-3\">{feature.title}</h3>\n                <p className=\"text-gray-600 text-sm\">{feature.description}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* CTA Section */}\n      <section className=\"py-20 px-4 sm:px-6 lg:px-8 bg-gradient-to-r from-orange-500 to-yellow-500\">\n        <div className=\"max-w-4xl mx-auto text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold text-white mb-6\">\n            Ready to Buzz Your Way to a Remote Career?\n          </h2>\n          <p className=\"text-xl text-yellow-100 mb-10\">\n            Join Buzz2Remote today and let our AI find your next big opportunity.\n          </p>\n          <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n            <button\n              onClick={handleGetStartedClick}\n              className=\"bg-white text-orange-600 px-10 py-3 rounded-lg hover:bg-yellow-50 transition-colors font-semibold shadow-lg text-lg\"\n            >\n              Create Free Account\n            </button>\n             <button\n                onClick={handleSignUpWithGoogleClick}\n                className=\"flex items-center justify-center space-x-2 bg-white text-orange-600 px-10 py-3 rounded-lg hover:bg-yellow-50 transition-colors font-semibold border border-orange-200 text-lg shadow-lg\"\n              >\n                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n                  <path fill=\"#4285F4\" d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\"/>\n                  <path fill=\"#34A853\" d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\"/>\n                  <path fill=\"#FBBC05\" d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\"/>\n                  <path fill=\"#EA4335\" d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\"/>\n                </svg>\n                <span>Sign up with Google</span>\n              </button>\n          </div>\n        </div>\n      </section>\n\n      {/* Footer */}\n      <footer className=\"bg-gray-900 text-white py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n            <div>\n              <Link to=\"/\" className=\"flex items-center space-x-3 mb-4\">\n                <div className=\"w-8 h-8 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-lg flex items-center justify-center shadow-md\">\n                  <span className=\"text-xl\">🐝</span>\n                </div>\n                <span className=\"text-xl font-bold\">Buzz2Remote</span>\n              </Link>\n              <p className=\"text-gray-400 text-sm mb-4\">\n                Your hive for global remote opportunities, powered by AI.\n              </p>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">For Job Seekers</h3>\n              <ul className=\"space-y-2 text-sm text-gray-400\">\n                <li><Link to=\"/profile\" className=\"hover:text-white\">My Profile</Link></li>\n                <li><Link to=\"/applications\" className=\"hover:text-white\">My Applications</Link></li>\n                <li><Link to=\"/help\" className=\"hover:text-white\">Help Center</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold mb-4\">Company</h3>\n              <ul className=\"space-y-2 text-sm text-gray-400\">\n                <li><Link to=\"/pricing\" className=\"hover:text-white\">Pricing</Link></li>\n                <li><Link to=\"/terms\" className=\"hover:text-white\">Terms & Conditions</Link></li>\n                <li><Link to=\"/privacy\" className=\"hover:text-white\">Privacy Policy</Link></li>\n              </ul>\n            </div>\n            <div>\n              <h4 className=\"font-bold mb-4\">For Employers</h4>\n              <ul className=\"space-y-2\">\n                <li><a href=\"/post-job\" className=\"text-gray-400 hover:text-white\">Post a Job</a></li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-800 mt-8 pt-8 text-center text-gray-500 text-sm\">\n            <p>&copy; {new Date().getFullYear()} Buzz2Remote. All rights reserved. AI Powered Remote Job Matching.</p>\n          </div>\n        </div>\n      </footer>\n\n      <AuthModal \n        isOpen={isAuthModalOpen} \n        onClose={() => setIsAuthModalOpen(false)} \n        defaultTab={authModalTab}\n      />\n\n      <Onboarding \n        isOpen={isOnboardingOpen} \n        onClose={() => setIsOnboardingOpen(false)}\n        onComplete={handleOnboardingComplete}\n      />\n\n      <section className=\"py-16 px-4 sm:px-6 lg:px-8 bg-gray-50\">\n        <div className=\"max-w-7xl mx-auto\">\n          <div className=\"text-center mb-12\">\n            <h3 className=\"text-base font-medium text-gray-700 dark:text-gray-300 mb-3\">\n              Most Searched Jobs\n            </h3>\n            <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-3\">\n              {popularPositions.map((position, index) => (\n                <QuickSearchButton \n                  key={`popular-${index}`}\n                  title={position}\n                  onClick={() => handleQuickSearch(position)}\n                />\n              ))}\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  );\n};\n\nexport default Home; "],"names":["APPLICATIONS_KEY","SAVED_JOBS_KEY","getApplications","stored","localStorage","getItem","JSON","parse","getSavedJobs","saveJob","jobId","savedJobs","includes","push","setItem","stringify","unsaveJob","updated","filter","id","getJobs","async","params","arguments","length","undefined","API_BASE_URL","getApiUrl","searchParams","URLSearchParams","page","append","toString","limit","company","location","sort_by","q","work_type","job_type","experience_level","posted_age","response","fetch","concat","ok","Error","status","statusText","json","error","console","items","jobs","total","getJobById","getJobApplications","app","userId","getSavedJobsForUser","savedJobIds","job","JobServiceClass","getBaseURL","perPage","filters","search","method","headers","data","getSimilarJobs","searchJobs","query","trim","per_page","getJobStatistics","getFeaturedJobs","result","getJobStats","total_jobs","jobs_by_company","jobs_by_location","createJob","jobData","body","updateJob","deleteJob","applyToJob","applicationData","getMyApplications","applications","scrapeJobApplicationForm","url","submitScrapedFormApplication","submitAutomatedApplication","getUserProfile","trackJobInteraction","action","timestamp","Date","toISOString","getJobTitleSuggestions","encodeURIComponent","title","count","category","jobService","_ref","children","_jsxs","className","_jsx","Header","isOpen","onClose","onComplete","currentStep","setCurrentStep","useState","profile","setProfile","fullName","email","jobTitle","experience","skills","preferences","jobTypes","salaryRange","remoteOnly","notifications","skillOptions","jobTypeOptions","value","label","experienceOptions","salaryRanges","handleComplete","onClick","style","width","renderStep","Zap","Target","CheckCircle","Bell","User","htmlFor","type","onChange","e","prev","_objectSpread","target","placeholder","MapPin","Briefcase","map","option","name","checked","Star","skill","s","handleSkillToggle","handleJobTypeToggle","jobType","t","range","handlePrevious","disabled","ArrowLeft","Array","_","i","handleNext","ArrowRight","Search","Building","Globe","DollarSign","Home","navigate","useNavigate","selectedPositions","setSelectedPositions","isAuthModalOpen","setIsAuthModalOpen","authModalTab","setAuthModalTab","featuredJobs","setFeaturedJobs","isOnboardingOpen","setIsOnboardingOpen","popularPositions","setPopularPositions","useEffect","onboardingCompleted","log","warn","formattedJobs","_job$company$","_id","employment_type","salary_range","salary","split","slice","created_at","posted_date","description","company_logo","toUpperCase","external_url","is_active","now","loadFeaturedJobs","fallbackPositions","positions","pos","loadData","getTimeAgo","dateString","posted","diffMs","getTime","diffHours","Math","floor","diffDays","Layout","autoPlay","loop","muted","playsInline","poster","src","MultiJobAutocomplete","onPositionsChange","onSearch","alert","set","p","join","maxSelections","tag","index","Link","to","icon","feature","handleGetStartedClick","handleSignUpWithGoogleClick","viewBox","fill","d","href","getFullYear","AuthModal","defaultTab","Onboarding","handleOnboardingComplete","position","QuickSearchButton"],"sourceRoot":""}